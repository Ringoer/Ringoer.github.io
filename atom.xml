<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ringo&#39;s Coding Life</title>
  
  <subtitle>OI to ACM</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-11T07:02:42.028Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ringoer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Welcome to No. 68 Floating Island</title>
    <link href="http://yoursite.com/uncategorized/mainpage/"/>
    <id>http://yoursite.com/uncategorized/mainpage/</id>
    <published>2332-12-31T16:00:00.000Z</published>
    <updated>2019-03-11T07:02:42.028Z</updated>
    
    <content type="html"><![CDATA[<p></p><p align="center"><b><font size="6">Are You Going To Scarborough Fair ?</font></b></p><br><img src="http://pic.ringoer.com/id63819688.png" alt="id=63819688" title="id=63819688"><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;/p&gt;&lt;p align=&quot;center&quot;&gt;&lt;b&gt;&lt;font size=&quot;6&quot;&gt;Are You Going To Scarborough Fair ?&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;img src=&quot;http://pic.ringoer.com/id63819688
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Ubuntu下使用Docker部署的办法</title>
    <link href="http://yoursite.com/docker/docker/"/>
    <id>http://yoursite.com/docker/docker/</id>
    <published>2020-06-06T13:21:00.000Z</published>
    <updated>2020-06-06T13:39:12.170Z</updated>
    
    <content type="html"><![CDATA[<p>这年头不是全栈工程师，连中间件实验都做不了了<br><a id="more"></a></p><h1 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h1><table><thead><tr><th>docker 名词</th><th>java 名词</th></tr></thead><tbody><tr><td>镜像</td><td>类</td></tr><tr><td>容器</td><td>对象</td></tr><tr><td>由镜像构建容器</td><td>new 一个某类的实例</td></tr><tr><td>docker build</td><td>设计一个class</td></tr><tr><td>docker run</td><td>new</td></tr><tr><td>列出镜像列表</td><td>查看所有类</td></tr><tr><td>列出所有容器</td><td>查看所有已经实例化的对象</td></tr><tr><td>停止容器</td><td>使得这个对象停止功能</td></tr><tr><td>删除容器</td><td>使得这个对象被释放（delete）</td></tr></tbody></table><h1 id="ubuntu-安装-docker"><a href="#ubuntu-安装-docker" class="headerlink" title="ubuntu 安装 docker"></a>ubuntu 安装 docker</h1><p>参考链接：<a href="https://www.runoob.com/docker/ubuntu-docker-install.html" target="_blank" rel="noopener">https://www.runoob.com/docker/ubuntu-docker-install.html</a></p><h2 id="预备"><a href="#预备" class="headerlink" title="预备"></a>预备</h2><p>先通过<code>docker version</code>查看本机上是否已经安装 docker，若是，则执行下述命令，卸载旧版本 docker</p><p><code>sudo apt-get remove docker docker-engine docker.io containerd runc</code></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="首次安装时，需要设置仓库"><a href="#首次安装时，需要设置仓库" class="headerlink" title="首次安装时，需要设置仓库"></a>首次安装时，需要设置仓库</h3><table><thead><tr><th>指令</th><th>用途</th></tr></thead><tbody><tr><td>sudo apt-get update</td><td>更新 apt 包索引</td></tr><tr><td>sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</td><td>安装 apt 依赖包，用于通过 HTTPS 来获取仓库</td></tr><tr><td>curl -fsSL <a href="https://download.docker.com/linux/ubuntu/gpg" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu/gpg</a> &#124; sudo apt-key add -</td><td>添加 Docker 的官方 GPG 密钥</td></tr><tr><td>sudo add-apt-repository “deb [arch=amd64] <a href="https://download.docker.com/linux/ubuntu" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu</a> $(lsb_release -cs) stable”</td><td>设置稳定版仓库</td></tr></tbody></table><h3 id="安装-Docker-Engine-Community"><a href="#安装-Docker-Engine-Community" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h3><table><thead><tr><th>指令</th><th>用途</th></tr></thead><tbody><tr><td>sudo apt-get update</td><td>更新 apt 包索引</td></tr><tr><td>sudo apt-get install docker-ce docker-ce-cli containerd.io</td><td>安装最新版本的 Docker Engine-Community 和 containerd</td></tr><tr><td>docker version</td><td>检查 docker 版本，验证是否安装成功</td></tr></tbody></table><h1 id="ubuntu-使用-docker-部署jar"><a href="#ubuntu-使用-docker-部署jar" class="headerlink" title="ubuntu 使用 docker 部署jar"></a>ubuntu 使用 docker 部署jar</h1><p>参考链接：<a href="https://blog.csdn.net/weixin_42054155/article/details/90815393" target="_blank" rel="noopener">https://blog.csdn.net/weixin_42054155/article/details/90815393</a></p><h2 id="构建-docker-镜像"><a href="#构建-docker-镜像" class="headerlink" title="构建 docker 镜像"></a>构建 docker 镜像</h2><ol><li><p>构造文件<code>Dockerfile</code>，这是一个无后缀文件</p><p>该文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">MAINTAINER Ringoer</span><br><span class="line">ADD demo-0.0.1-SNAPSHOT.jar demo.jar</span><br><span class="line">EXPOSE 8080</span><br><span class="line">ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;demo.jar&quot;]</span><br></pre></td></tr></table></figure><p>FROM 表示拉取一个 java 版本为 1.8 的 docker image（docker镜像）</p><p>MAINTAINER 表示作者声明，后接作者名字</p><p>ADD 向镜像中加入文件，第一个参数是要加入的文件名，第二个参数是文件的重命名，表示它在 docker 镜像中的名字</p><p>EXPOSE 表示该镜像对外暴露的端口号（与 java 项目的端口号要相同）</p><p>ENTRYPOINT 表示运行该镜像时执行的命令行参数，示例中给出的配置等效于执行命令<code>java -jar demo.jar</code></p></li><li><p>向服务器上传 jar 包和 Dockerfile 文件，这两个文件要在同一个目录下</p></li><li><p>连接服务器终端，cd 进入该目录</p></li><li><p>执行命令 <code>docker build -t demo .</code> 构建镜像，其中 demo 是镜像名称。记得别漏了最后的一个点</p></li></ol><h2 id="操作镜像"><a href="#操作镜像" class="headerlink" title="操作镜像"></a>操作镜像</h2><ol><li><p>运行容器</p><p><code>docker run -d --name demo1 -p 8080:8080 demo</code></p><p>docker run 部分是不可变的</p><p>-d 指示了 docker 容器后台运行</p><p>–name 部分指示了新运行的容器实例的名称</p><p>-p 部分指示了两个端口号，用冒号隔开。其中前一个端口号表示暴露在公网的 ip，后一个表示容器暴露的 ip</p><p>最后一个参数是镜像名称，此处表示使用名为 demo 的镜像构建容器，容器名为 demo1</p></li><li><p>其余命令</p></li></ol><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>docker pull [name]</td><td>根据名称获取镜像</td></tr><tr><td>docker images</td><td>查看所有镜像</td></tr><tr><td>docker rmi [name]</td><td>根据名称删除某个镜像</td></tr><tr><td>docker rmi $(docker images -q)</td><td>删除所有镜像</td></tr><tr><td>docker ps -a</td><td>查看所有容器</td></tr><tr><td>docker ps -aq</td><td>列出所有容器ID</td></tr><tr><td>docker stop [name]</td><td>根据名称停止某个容器</td></tr><tr><td>docker stop $(docker ps -aq)</td><td>停止所有容器</td></tr><tr><td>docker rm [name]</td><td>根据名称删除某个容器</td></tr><tr><td>docker rm $(docker ps -aq)</td><td>删除所有容器</td></tr></tbody></table><h1 id="docker-借助-nginx-部署-vue"><a href="#docker-借助-nginx-部署-vue" class="headerlink" title="docker 借助 nginx 部署 vue"></a>docker 借助 nginx 部署 vue</h1><p>参考链接：</p><p><a href="http://dockone.io/article/8834" target="_blank" rel="noopener">http://dockone.io/article/8834</a></p><p><a href="https://www.cnblogs.com/littleorange7/p/12838101.html" target="_blank" rel="noopener">https://www.cnblogs.com/littleorange7/p/12838101.html</a></p><ol><li><p>在服务器上使用命令 <code>docker pull nginx</code> 下载 nginx</p></li><li><p>在服务器上为 vue 项目新建一个文件夹（假设命名为 vue）</p></li><li><p>在本地使用命令 <code>npm run build</code> 打包 vue 项目，打包完成后会在项目目录下产生一个 dist 文件夹。将该文件夹上传到服务器</p></li><li><p>在本地编写 Dockerfile 文件</p><p>文件内容如下，照抄即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM nginx</span><br><span class="line">COPY dist/ /usr/share/nginx/html/</span><br><span class="line">COPY nginx/default.conf /etc/nginx/conf.d/default.conf</span><br></pre></td></tr></table></figure><p>编写完毕后上传到服务器的 vue 文件夹</p></li><li><p>新建一个名为 nginx 的文件夹，在这个文件夹里新建一个名为 default.conf 的文件</p><p>文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen       2222;</span><br><span class="line">server_name  ali.ringoer.com;</span><br><span class="line"></span><br><span class="line">#charset koi8-r;</span><br><span class="line">access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line">error_log  /var/log/nginx/error.log  error;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">    root   /usr/share/nginx/html;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /api/ &#123;</span><br><span class="line">    proxy_pass   http://ali.ringoer.com:9527/;</span><br><span class="line">    proxy_redirect  off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line"># redirect server error pages to the static page /50x.html</span><br><span class="line">#</span><br><span class="line">error_page   500 502 503 504  /50x.html;</span><br><span class="line">location = /50x.html &#123;</span><br><span class="line">    root   /usr/share/nginx/html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的字段如下</p></li></ol><table><thead><tr><th>字段名</th><th>用途</th></tr></thead><tbody><tr><td>listen</td><td>配置 nginx 的监听端口，要求与 vue 配置的端口号一致</td></tr><tr><td>server_name</td><td>前端访问的主机名，要求填写公网地址（域名或 ip）</td></tr><tr><td>location /api/ {}</td><td>配置跨域请求，这里的 /api/ 与 vue 项目内部配置的 proxyTable 里所填前缀一致</td></tr><tr><td>proxy_pass</td><td>转发地址，与 vue 项目内部配置的 proxyTable 下的 target 所填内容一致。必须完整填写（包含 http 和斜杠），不然会报错</td></tr><tr><td>proxy_redirect</td><td>是否重定向，off 就行了</td></tr><tr><td>别的东西</td><td>都可以照抄</td></tr></tbody></table><p>   将 nginx 文件夹上传到服务器 vue 文件夹</p><ol start="6"><li>现在服务器 vue 文件夹中有2个文件夹和1个文件</li></ol><table><thead><tr><th>文件名</th><th>描述</th></tr></thead><tbody><tr><td>dist</td><td>vue 项目静态资源文件夹</td></tr><tr><td>nginx</td><td>nginx 配置文件夹</td></tr><tr><td>Dockerfile</td><td>docker 配置文件（不是文件夹）</td></tr></tbody></table><p>   其中 nginx 文件夹中还包含 default.conf 文件</p><p>   接下来过程与部署 jar 包一致</p><ol start="7"><li><p>部署命令顺序</p><p>通过 cd 命令进入服务器上 vue 文件夹后，按顺序执行下述命令</p><ol><li><p><code>docker build -t [name] .</code>，其中 [name] 是你所希望的镜像名称</p><p>末尾的一个点别漏了</p></li><li><p><code>docker run -d --name [name1] -p [port1]:[port2] [name2]</code>，其中</p></li></ol></li></ol><table><thead><tr><th>字段名</th><th>描述</th></tr></thead><tbody><tr><td>[name1]</td><td>你所希望的容器名称</td></tr><tr><td>[port1]</td><td>容器暴露在公网的端口号</td></tr><tr><td>[port2]</td><td>nginx 监听的端口号，也是 vue 项目配置的端口号</td></tr><tr><td>[name2]</td><td>1中命令设置的镜像名称</td></tr></tbody></table><p>现在，通过浏览器访问 [server_name]:[port1] 即可看到你的 vue 项目</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这年头不是全栈工程师，连中间件实验都做不了了&lt;br&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu服务器上的部署办法</title>
    <link href="http://yoursite.com/J2EE/deploy-on-ubuntu/"/>
    <id>http://yoursite.com/J2EE/deploy-on-ubuntu/</id>
    <published>2020-06-03T15:23:00.000Z</published>
    <updated>2020-06-03T15:44:05.571Z</updated>
    
    <content type="html"><![CDATA[<p>今天紧急学习了一下部署jar包的方法，特此存档<br><a id="more"></a></p><p>部署的流程主要分为2步。  </p><ol><li>向服务器上传jar包</li><li>使用服务器终端启动jar包</li></ol><p>以下基于Windows10环境  </p><h1 id="向服务器上传jar包"><a href="#向服务器上传jar包" class="headerlink" title="向服务器上传jar包"></a>向服务器上传jar包</h1><ol><li>下载安装WinSCP<br> <a href="http://download.ringoer.com/WinSCP-5.17.6-Setup.exe" target="_blank" rel="noopener">点我下载</a></li><li>打开WinSCP，连接到服务器<br> 连接设置如下图，默认SFTP协议和22端口即可<br> 主机名填写服务器的ip地址<br> <img src="http://pic.ringoer.com/ubuntu部署.png" alt="ubuntu部署"></li><li>登录之后，如同在本机上一般，直接拖动本机jar包到服务器目录即可<br> 注意，最好给每个jar包单独一个存放目录</li></ol><h1 id="使用服务器终端启动jar包"><a href="#使用服务器终端启动jar包" class="headerlink" title="使用服务器终端启动jar包"></a>使用服务器终端启动jar包</h1><ol><li>随意找个位置，通过右键菜单启动Git Bash Here</li><li>输入命令<code>ssh root@ip</code><br> 其中ssh是命令名，root是服务器用户名，ip是服务器地址<br> 如ip为127.0.0.1，用户名为root，则连接命令为<code>ssh root@127.0.0.1</code></li><li>输入用户名对应的密码，成功进入服务器终端</li><li>首先使用ls查看当前所在目录下的所有文件名，找到自己存放jar包的目录的父目录<br> 然后不断cd进入下级目录，直到进入自己存放jar包的目录</li><li>输入命令<code>nohup java -jar filename.jar &amp;</code>即可启动jar包<br> 其中filename更改为你的jar包名称</li></ol><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><ol><li>服务器所使用的java版本（一般是1.8）要与打包jar包时使用的版本一致</li><li>应时刻注意服务器资源使用情况，避免服务器宕机<br> 使用<code>free</code>命令可以查看内存使用情况<br> 使用<code>df -hl</code>命令可以查看磁盘使用情况</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天紧急学习了一下部署jar包的方法，特此存档&lt;br&gt;
    
    </summary>
    
    
      <category term="J2EE" scheme="http://yoursite.com/categories/J2EE/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Django建站初探</title>
    <link href="http://yoursite.com/python/django/"/>
    <id>http://yoursite.com/python/django/</id>
    <published>2020-04-04T13:43:00.000Z</published>
    <updated>2020-04-05T02:45:05.468Z</updated>
    
    <content type="html"><![CDATA[<p>在使用 python 做爬虫或机器学习的时候，有时候需要浏览所得到的阶段性成果，这时候就需要一个前端。</p><a id="more"></a><p>本文所使用的示例代码：<a href="http://download.ringoer.com/django-sample.rar" target="_blank" rel="noopener">点我下载</a></p><p>环境：</p><ul><li>Windows10</li><li>VSCODE</li><li>python 3.7</li></ul><p>-为什么选择 django ？</p><p>-没有为什么，我高兴</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装-django"><a href="#安装-django" class="headerlink" title="安装 django"></a>安装 django</h2><p>在命令行中使用以下语句安装 django</p><p><code>pip install django</code></p><p>或使用国内镜像</p><p><code>pip install -i https://pypi.douban.com/simple django</code></p><p>安装后可以在命令行中启动 python 以查看 django 是否安装成功</p><p><img src="http://pic.ringoer.com/django-1-查看django版本号.png" alt="1-查看django版本号"></p><h2 id="创建一个-django-新项目"><a href="#创建一个-django-新项目" class="headerlink" title="创建一个 django 新项目"></a>创建一个 django 新项目</h2><ol><li><p>启动命令行，进入你想放置该项目的目录</p></li><li><p>使用以下语句创建工程</p><p><code>django-admin startproject [projectname]</code></p><p>其中 <code>[projectname]</code> 可以按需要修改为自己的项目名</p><p><img src="http://pic.ringoer.com/django-2-创建新项目.png" alt="2-创建新项目"></p></li><li><p>创建完成后，在命令行中进入该项目，输入以下语句启动测试页面</p><p><code>python manage.py runserver</code></p><p>如果启动成功，则可以访问以下网址查看测试页面</p><p><a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a></p><p>测试页面如图</p><p><img src="http://pic.ringoer.com/django-3-测试页面.png" alt="3-测试页面"></p></li><li><p>django 目录结构</p><p><img src="http://pic.ringoer.com/django-4-django目录结构.png" alt="4-django目录结构"></p><p>如上图，一个默认的 django 项目包含如下文件树：</p><p>——sample</p><p>————sample（项目控制组件，用于控制项目的公有配置）</p><p>——————<strong>pycache</strong>（提供默认配置文件，不需要更改）</p><p>————————<strong>init</strong>.cpython-37.pyc</p><p>————————settings.cpython-37.pyc</p><p>————————urls.cpython-37.pyc</p><p>————————wsgi.cpython-37.pyc</p><p>——————<strong>init</strong>.py（提供默认配置文件，不需要更改）</p><p>——————asgi.py（提供默认配置文件，不需要更改）</p><p>——————settings.py（项目主配置文件）</p><p>——————urls.py（项目访问路径配置文件）</p><p>——————wsgi.py（提供默认配置文件，不需要更改）</p><p>————db.sqlite3（项目自带简易数据库，不需要更改，在第一次启动项目后才会生成）</p><p>————manage.py（项目主启动类，不需要更改）</p></li></ol><p>   可见，我们只有3种办法修改我们的项目：</p><ol><li>修改settings.py</li><li>修改urls.py</li><li><p>添加新的目录</p><p>让我们先来认识一下项目控制组件下的2个配置文件</p></li></ol><h3 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h3><p>项目主配置文件，提供一些基本配置。</p><p>常用配置如下：</p><ol><li><p>BASE_DIR</p><p>指示项目的绝对位置</p><p>是项目所在的位置，不是项目控制组件所在的位置</p><p>会自动识别，不需修改</p></li><li><p>INSTALLED_APPS</p><p>创建了新的组件后，要在此处注册</p></li><li><p>ROOT_URLCONF</p><p>指示项目访问路径配置文件的位置</p><p>一般不需修改</p></li><li><p>TEMPLATES -&gt; DIRS</p><p>指示项目中引用的所有模板文件的绝对位置</p><p><span style="color:red">请在项目中适用如下配置</span></p><p>通常为了方便使用，都会在项目目录下新建文件夹 template，并对 TEMPLATES  属性作如下修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>).replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)], <span class="comment"># 唯一修改的语句</span></span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="keyword">True</span>,</span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'context_processors'</span>: [</span><br><span class="line">                <span class="string">'django.template.context_processors.debug'</span>,</span><br><span class="line">                <span class="string">'django.template.context_processors.request'</span>,</span><br><span class="line">                <span class="string">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class="line">                <span class="string">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>STATIC_URL</p><p>指示项目中引用的所有静态文件的相对路径名</p><p>该属性可以含有如下子属性</p><ol><li><p>STATIC_ROOT</p><p>指示项目中引用的所有静态文件的绝对位置</p></li><li><p>STATICFILES_DIRS</p><p>指示静态文件目录下的其它目录的绝对位置</p></li></ol><p><span style="color:red">请在项目中适用如下配置</span></p><p>通常为了方便使用，都会在项目目录下新建文件夹 static，且 static 文件夹包含3个子文件夹，分别为 css、images、js</p><p>并对 STATIC_URL 属性作如下修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = <span class="string">'/static/'</span></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">'static'</span>).replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)</span><br><span class="line">STATICFILES_DIRS = (</span><br><span class="line">    (<span class="string">'css'</span>, os.path.join(STATIC_ROOT, <span class="string">'css'</span>).replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)),</span><br><span class="line">    (<span class="string">'images'</span>, os.path.join(STATIC_ROOT, <span class="string">'images'</span>).replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)),</span><br><span class="line">    (<span class="string">'js'</span>, os.path.join(STATIC_ROOT, <span class="string">'js'</span>).replace(<span class="string">'\\'</span>, <span class="string">'/'</span>)),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol><h3 id="urls-py"><a href="#urls-py" class="headerlink" title="urls.py"></a>urls.py</h3><p>项目访问路径配置文件，用于控制访问路径。</p><p>一般只需修改 urlpatterns 属性。默认含有一条语句</p><p><code>path(&#39;admin/&#39;, admin.site.urls),</code></p><p>例如当添加一个名为 mytest 的新组件，且希望路径 /test 指向它时，可以向 urlpatterns 属性下添加如下语句</p><p><code>url(&#39;test/&#39;, include(&#39;mytest.urls&#39;)),</code></p><h1 id="创建子组件"><a href="#创建子组件" class="headerlink" title="创建子组件"></a>创建子组件</h1><p>在命令行中进入项目目录，执行以下语句</p><p><code>python manage.py startapp [appname]</code></p><p>其中 appname 即为你想新建的组件名</p><p>组件名不可以重名</p><p><img src="http://pic.ringoer.com/django-5-创建hello子组件.png" alt="5-创建hello子组件"></p><p>子组件 hello 的目录结构如下</p><p><img src="http://pic.ringoer.com/django-6-hello子组件的目录结构.png" alt="6-hello子组件的目录结构"></p><p>其中两个 <strong>init</strong>.py 文件是默认的配置文件，无需修改</p><h2 id="apps-py"><a href="#apps-py" class="headerlink" title="apps.py"></a>apps.py</h2><p>指示本组件的名称，保持默认即可</p><h2 id="tests-py"><a href="#tests-py" class="headerlink" title="tests.py"></a>tests.py</h2><p>为本组件创建测试</p><p>本教程不对此深入讨论</p><h2 id="models-py"><a href="#models-py" class="headerlink" title="models.py"></a>models.py</h2><p>在本文件中，程序员应该描述本组件包含的实体类的声明</p><p>横向对比来说，类似于 java 开发中的 domain 层</p><p>此处我们创建一个保存我们自己数据的 myData 类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myData</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">  username = models.TextField()</span><br><span class="line">  description = models.TextField()</span><br><span class="line">  age = models.IntegerField()</span><br></pre></td></tr></table></figure><h2 id="admin-py"><a href="#admin-py" class="headerlink" title="admin.py"></a>admin.py</h2><p>默认情况下包含如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br></pre></td></tr></table></figure><p>需要根据子组件的 models 来添加代码</p><p>比如，我们在上文中，在 hello 子组件中创建了 myData 类，那就需要修改本文件代码为如下模样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> hello.models <span class="keyword">import</span> myData</span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"></span><br><span class="line">admin.site.register(myData)</span><br></pre></td></tr></table></figure><h2 id="views-py"><a href="#views-py" class="headerlink" title="views.py"></a>views.py</h2><p>用于组织本组件视图的文件，程序员应在其中写入对模板渲染时所需数据的预处理操作</p><p>本例中，我们将定义一个名为 helloworld 的方法来进行预处理</p><h2 id="应添加在子组件中的非默认文件"><a href="#应添加在子组件中的非默认文件" class="headerlink" title="应添加在子组件中的非默认文件"></a>应添加在子组件中的非默认文件</h2><h3 id="data-csv"><a href="#data-csv" class="headerlink" title="data.csv"></a>data.csv</h3><p>用于保存本组件所需数据的原始数据表。可以没有本项目</p><h3 id="dataimport-py"><a href="#dataimport-py" class="headerlink" title="dataimport.py"></a>dataimport.py</h3><p>用于指示如何向项目主目录下的 db.sqlite3 数据库中注入 data.csv</p><p>当不存在 data.csv 时，也不需有本文件</p><p>现在，为了方便示例，让我们创建 data.csv，并向其中插入如下数据</p><table><thead><tr><th>username</th><th>description</th><th>age</th></tr></thead><tbody><tr><td>ringoer</td><td>从忘恩之地吹来的风</td><td>21</td></tr><tr><td>myname</td><td>测试用说说</td><td>100</td></tr></tbody></table><p>并创建 dataimport.py，输入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在自己脚本中使用django model</span></span><br><span class="line"><span class="keyword">import</span> sys,os</span><br><span class="line"></span><br><span class="line">sys.path.append(os.path.abspath(os.path.dirname(os.path.dirname(__file__))))</span><br><span class="line">os.environ[<span class="string">'DJANGO_SETTINGS_MODULE'</span>] = <span class="string">'sample.settings'</span>  <span class="comment"># 配置系统变量</span></span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line">django.setup()</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> hello.models <span class="keyword">import</span> myData <span class="comment"># 引入数据类型，与本组件的models中声明的类型相同</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从csv读取数据并存入models创建的表里</span></span><br><span class="line"><span class="comment"># 此处路径是相对于项目主目录的</span></span><br><span class="line">data_path = <span class="string">'hello/data.csv'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(data_path, encoding = <span class="string">'UTF-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">   reader = csv.reader(f)</span><br><span class="line">   <span class="keyword">for</span> i, row <span class="keyword">in</span> enumerate(reader):</span><br><span class="line">      mydata = myData()</span><br><span class="line">      <span class="keyword">if</span> i&gt;<span class="number">0</span>:</span><br><span class="line">        mydata.username = row[<span class="number">0</span>]</span><br><span class="line">        mydata.description = row[<span class="number">1</span>]</span><br><span class="line">        mydata.age = int(row[<span class="number">2</span>])</span><br><span class="line">        mydata.save()</span><br></pre></td></tr></table></figure><p>为了正常指向该组件，需要配置</p><ol><li>该组件的 urls.py </li><li>项目控制组件中的 urls.py</li><li>项目控制组件中的 settings.py</li></ol><h3 id="hello-urls-py"><a href="#hello-urls-py" class="headerlink" title="hello/urls.py"></a>hello/urls.py</h3><p>用于指示本组件中的路由</p><p>但默认的代码使用的是 path 方法来指示路由，并不能正常工作，故本例中使用 url 方法来指示路由</p><p>本例中可以在该文件中写入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.contrib.staticfiles.urls <span class="keyword">import</span> staticfiles_urlpatterns</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^hello/'</span>, include(<span class="string">'hello.urls'</span>)),</span><br><span class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br><span class="line">urlpatterns += staticfiles_urlpatterns()</span><br></pre></td></tr></table></figure><h3 id="sample-urls-py"><a href="#sample-urls-py" class="headerlink" title="sample/urls.py"></a>sample/urls.py</h3><p>如果我们希望通过 hello 路径来访问 hello 组件，可以向该文件中插入如下语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hello</span><br><span class="line">path(<span class="string">'hello/'</span>, hello.urls),</span><br></pre></td></tr></table></figure><p>则该文件变为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hello</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'hello/'</span>, hello.urls),</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后在项目控制组件的 settings.py 的 INSTALLED_APPS 属性中注册该组件，就可以正常路由了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'hello'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="创建页面文件并渲染"><a href="#创建页面文件并渲染" class="headerlink" title="创建页面文件并渲染"></a>创建页面文件并渲染</h1><p>只有路由没有页面，一样什么都显示不了，所以我们需要对组件内的 views.py 进行修改，使得其能渲染页面，并另外提供一个用于渲染的 html 模板</p><h2 id="views-py-1"><a href="#views-py-1" class="headerlink" title="views.py"></a>views.py</h2><p>默认情况下有如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br></pre></td></tr></table></figure><p>本文中提供如下代码作为例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="keyword">from</span> hello.models <span class="keyword">import</span> myData</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">helloworld</span><span class="params">(request)</span>:</span></span><br><span class="line">  myData_list = myData.objects.all()</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 分页算法</span></span><br><span class="line">  perpage = <span class="number">10</span></span><br><span class="line">  maxPage = int((len(myData_list) - <span class="number">1</span>) / perpage + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  page = request.GET.get(<span class="string">'page'</span>)</span><br><span class="line">  <span class="keyword">try</span>:</span><br><span class="line">    page = int(page)</span><br><span class="line">  <span class="keyword">except</span>:</span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> page &gt; maxPage:</span><br><span class="line">    page = maxPage</span><br><span class="line">  <span class="keyword">elif</span> page &lt;= <span class="number">0</span>:</span><br><span class="line">    page = <span class="number">1</span></span><br><span class="line">  </span><br><span class="line">  minIndex = (page - <span class="number">1</span>) * perpage</span><br><span class="line">  maxIndex = page * perpage</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> maxIndex &gt; len(myData_list):</span><br><span class="line">    maxIndex = len(myData_list)</span><br><span class="line"></span><br><span class="line">  myData_list = myData_list[minIndex : maxIndex]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># 提供给前端的内容</span></span><br><span class="line">  context = &#123;</span><br><span class="line">    <span class="string">'myData_list'</span>: myData_list, <span class="comment"># 渲染表格用的列表</span></span><br><span class="line">    <span class="string">'page'</span>: page, <span class="comment"># 页号</span></span><br><span class="line">    <span class="string">'message'</span>: <span class="string">'helloworld!'</span>, <span class="comment"># 传给前端的消息</span></span><br><span class="line">&#125;</span><br><span class="line">  <span class="keyword">return</span> render(request, <span class="string">'hello.html'</span>, context) <span class="comment"># 第二参数是目标html文件名称，该html须在templates文件夹下</span></span><br></pre></td></tr></table></figure><h2 id="hello-html"><a href="#hello-html" class="headerlink" title="hello.html"></a>hello.html</h2><p>需要注意的模板语法有两条</p><ol><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; 变量名 &#125;&#125;</span><br></pre></td></tr></table></figure><p>可以实现对变量取值</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for %&#125;</span><br><span class="line"></span><br><span class="line">（此处填写html语句）</span><br><span class="line"></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>可以实现循环渲染</p></li></ol><p>本例中的 html 代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">language</span>=<span class="string">"zh-cn"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/css/style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; message &#125;&#125;&amp;emsp;第&#123;&#123; page &#125;&#125;页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>username<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>description<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>age<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% for i in myData_list %&#125; </span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; i.username &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; i.description &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; i.age &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="迁移数据"><a href="#迁移数据" class="headerlink" title="迁移数据"></a>迁移数据</h1><p>到这里，试图 runserver 的时候，却发现应用跑不起来了。这是为什么呢？</p><p>因为之前给 hello 组件准备的数据还没导入！</p><p>让我们导入数据吧</p><ol><li><p>执行语句 <code>python manage.py makemigrations</code> 创建迁移文件</p><p><img src="http://pic.ringoer.com/django-7-创建迁移文件.png" alt="7-创建迁移文件"></p></li><li><p>执行语句 <code>python manage.py migrate</code> 完成迁移文件的导入</p><p><img src="http://pic.ringoer.com/django-8-完成迁移文件的导入.png" alt="8-完成迁移文件的导入"></p></li><li><p>执行语句 <code>python hello/dataimport.py</code> 完成数据导入</p><p><img src="http://pic.ringoer.com/django-9-完成数据导入.png" alt="9-完成数据导入"></p><p>需要注意的是，当数据量很大时，由于 python 语言性质，会导致导入速度非常慢，请耐心等待</p></li></ol><h1 id="验收成果"><a href="#验收成果" class="headerlink" title="验收成果"></a>验收成果</h1><p>经过这么长的教程，终于可以验收成果了！</p><p><img src="http://pic.ringoer.com/django-10-验收成果.png" alt="10-验收成果"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>django 建站的步骤大致如下：</p><ol><li>初始化项目，配置静态资源</li><li>构建若干子组件</li><li>为子组件构建实体类、数据、页面与页面渲染、路由</li><li>在配置文件中注册组件</li><li>迁移数据，导入数据</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用 python 做爬虫或机器学习的时候，有时候需要浏览所得到的阶段性成果，这时候就需要一个前端。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="django" scheme="http://yoursite.com/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>mapper层配置</title>
    <link href="http://yoursite.com/J2EE/mapper/"/>
    <id>http://yoursite.com/J2EE/mapper/</id>
    <published>2020-01-02T12:12:00.000Z</published>
    <updated>2020-01-02T13:17:26.159Z</updated>
    
    <content type="html"><![CDATA[<p>和数据库直接联系的，重要的mapper层的配置。<br><a id="more"></a></p><h1 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- druid 数据库连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- jdbc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 正常一定会有的 maven plugin --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>mybatis-generator/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="application-yaml"><a href="#application-yaml" class="headerlink" title="application.yaml"></a>application.yaml</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">USER-SERVICE</span></span><br><span class="line"><span class="attr">  profiles:</span></span><br><span class="line">    <span class="comment"># 为了便于管理，将具体的 datasource 配置放在另一个文件中</span></span><br><span class="line">    <span class="comment"># 下方 active 属性名，设为dev，则spring会自动寻找和 application.yaml同一目录下的 application-dev.yaml</span></span><br><span class="line">    <span class="comment"># 也就是说，设为x，则会自动寻找application-x.yaml</span></span><br><span class="line">    <span class="comment"># 效果等同于将目标文件内的 datasource 配置直接写在当前文件中</span></span><br><span class="line"><span class="attr">    active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="comment"># domain对象的包</span></span><br><span class="line"><span class="attr">  type-aliases-package:</span> <span class="string">xmu.oomall.user.domain</span></span><br><span class="line">  <span class="comment"># mapper.xml所在的位置</span></span><br><span class="line">  <span class="comment"># 本项目的mapper放在 /resource/xmu.oomall.mapper 目录下</span></span><br><span class="line">  <span class="comment"># 如果配置时索引不到mapper，可能是前置名称有问题</span></span><br><span class="line">  <span class="comment"># 如该项目，mapper.xml所在的文件夹可以试试 /xmu.oomall.mapper 或者 /xmu/oomall/mapper</span></span><br><span class="line"><span class="attr">  mapper-locations:</span> <span class="attr">classpath:xmu.oomall.mapper/*.xml</span></span><br><span class="line"><span class="attr">  configuration:</span></span><br><span class="line">    <span class="comment"># 自动将SQL中查出来的带下划线的字段，转换为驼峰标志，再去匹配类中的属性</span></span><br><span class="line"><span class="attr">    mapUnderscoreToCamelCase:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="application-dev-yaml"><a href="#application-dev-yaml" class="headerlink" title="application-dev.yaml"></a>application-dev.yaml</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="comment"># 目标数据库地址</span></span><br><span class="line">    <span class="comment"># jdbc开头，接数据库类型，接ip地址，接数据库名</span></span><br><span class="line"><span class="attr">    url:</span> <span class="attr">jdbc:mysql://106.14.83.157:3306/oomall</span></span><br><span class="line">    <span class="comment"># 登录数据库</span></span><br><span class="line"><span class="attr">    username:</span> <span class="string">ooadUser</span></span><br><span class="line"><span class="attr">    password:</span> <span class="string">ooad</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attr">    druid:</span></span><br><span class="line">      <span class="comment"># 初始化时建立物理连接的个数</span></span><br><span class="line"><span class="attr">      initial-size:</span> <span class="number">3</span></span><br><span class="line">      <span class="comment"># 最小连接池数量</span></span><br><span class="line"><span class="attr">      min-idle:</span> <span class="number">3</span></span><br><span class="line">      <span class="comment"># 最大连接池数量</span></span><br><span class="line"><span class="attr">      max-active:</span> <span class="number">10</span></span><br><span class="line">      <span class="comment"># 获取连接时最大等待时间</span></span><br><span class="line"><span class="attr">      max-wait:</span> <span class="number">60000</span></span><br><span class="line"><span class="attr">      filter:</span></span><br><span class="line"><span class="attr">        stat:</span></span><br><span class="line">          <span class="comment"># 是否开启慢sql查询监控</span></span><br><span class="line"><span class="attr">          log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">          <span class="comment"># 慢SQL执行时间</span></span><br><span class="line"><span class="attr">          slow-sql-millis:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">      validation-query:</span> <span class="string">select</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>到这里，配置基本完成了，接下来开始写mapper</p><h1 id="UserMapper-java"><a href="#UserMapper-java" class="headerlink" title="UserMapper.java"></a>UserMapper.java</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xmu.oomall.user.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> xmu.oomall.user.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Ringoer</span></span><br><span class="line"><span class="comment"> * 必须是接口类型</span></span><br><span class="line"><span class="comment"> * 必须有 <span class="doctag">@Mapper</span> 注解</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id返回用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">User <span class="title">findUserById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id返回用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">User <span class="title">findUserByName</span><span class="params">(String name)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册一个用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改一个用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 修改影响的行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">editUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回用户列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findUsers</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="UserMapper-xml"><a href="#UserMapper-xml" class="headerlink" title="UserMapper.xml"></a>UserMapper.xml</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace中填写对应的mapper接口位置及名称--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"xmu.oomall.user.mapper.UserMapper"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sql语句之select--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id 填写在接口中对应的方法名 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- parameterType 填写传入参数的类型，类型名称与java类型相同 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- resultType 填写返回参数的名称，类型名称与java类型相同，返回时会自动组装 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对于数据库保留字段，如 name ，不能直接查询，要使用 `` 包裹住才行（不是单引号） --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对于传入参数，使用 #&#123;变量名&#125; 方式来取值，其中变量名与java中相同 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserById"</span> <span class="attr">parameterType</span>=<span class="string">"Integer"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">            select id,</span><br><span class="line">                   password,</span><br><span class="line">                    `name`,</span><br><span class="line">                    gender,</span><br><span class="line">                    birthday,</span><br><span class="line">                    mobile,</span><br><span class="line">                    nickname,</span><br><span class="line">                    rebate,</span><br><span class="line">                    avatar,</span><br><span class="line">                    role_id,</span><br><span class="line">                    last_login_time,</span><br><span class="line">                    last_login_ip,</span><br><span class="line">                    user_level,</span><br><span class="line">                    wx_open_id,</span><br><span class="line">                    session_key,</span><br><span class="line">                    gmt_create,</span><br><span class="line">                    gmt_modified,</span><br><span class="line">                    is_deleted as beDeleted</span><br><span class="line">                    from `oomall_user` where id = #&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sql语句之select--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- resultType 填写返回参数的名称，类型名称与java类型相同，返回时会自动组装 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对于返回类型是List的情况，resultType中只需要填List中的单体的类型即可 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如该方法返回值是 List&lt;User&gt; ，但 resultType 只需要填写 User --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUsers"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">        select  id,</span><br><span class="line">                password,</span><br><span class="line">                `name`,</span><br><span class="line">                gender,</span><br><span class="line">                birthday,</span><br><span class="line">                mobile,</span><br><span class="line">                nickname,</span><br><span class="line">                rebate,</span><br><span class="line">                avatar,</span><br><span class="line">                role_id,</span><br><span class="line">                last_login_time,</span><br><span class="line">                last_login_ip,</span><br><span class="line">                user_level,</span><br><span class="line">                wx_open_id,</span><br><span class="line">                session_key,</span><br><span class="line">                gmt_create,</span><br><span class="line">                gmt_modified,</span><br><span class="line">                is_deleted as beDeleted</span><br><span class="line">        from `oomall_user`;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sql语句之select--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserByName"</span> <span class="attr">parameterType</span>=<span class="string">"String"</span> <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">            select id,</span><br><span class="line">                   password,</span><br><span class="line">                    `name`,</span><br><span class="line">                    gender,</span><br><span class="line">                    birthday,</span><br><span class="line">                    mobile,</span><br><span class="line">                    nickname,</span><br><span class="line">                    rebate,</span><br><span class="line">                    avatar,</span><br><span class="line">                    role_id,</span><br><span class="line">                    last_login_time,</span><br><span class="line">                    last_login_ip,</span><br><span class="line">                    user_level,</span><br><span class="line">                    wx_open_id,</span><br><span class="line">                    session_key,</span><br><span class="line">                    gmt_create,</span><br><span class="line">                    gmt_modified,</span><br><span class="line">                    is_deleted as beDeleted</span><br><span class="line">            from `oomall_user` where `name` = #&#123;name&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sql语句之insert--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id 填写在接口中对应的方法名 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- parameterType 填写传入参数的类型，类型名称与java类型相同 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- useGeneratedKeys 表示在数据库中插入时是否使用自增主键。需要与 keyProperty 配合使用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 无 resultType ，因为sql中insert方法一定返回此次更新影响的行数，即resultType一定是Integer --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- keyProperty 表示在数据库中的主键是哪个字段，字段名称与java中的相同。需要与 useGeneratedKeys 配合使用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果使用了 useGeneratedKeys 和 keyProperty ，则插入成功后jdbc会自动将生成的主键装配进传入的变量中，可以在java中直接获取 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 对于传入参数，使用 #&#123;变量名&#125; 方式来取值，其中变量名与java中相同 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 如果传入参数类型是一个包含多个字段的类，则依然使用 #&#123;变量名&#125; 方式来取值，此时变量名直接与类中字段名相同，不需要再次声明类名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">        insert into `oomall_user`(</span><br><span class="line">            password,</span><br><span class="line">            `name`,</span><br><span class="line">            gender,</span><br><span class="line">            birthday,</span><br><span class="line">            mobile,</span><br><span class="line">            nickname,</span><br><span class="line">            rebate,</span><br><span class="line">            avatar,</span><br><span class="line">            role_id,</span><br><span class="line">            last_login_time,</span><br><span class="line">            last_login_ip,</span><br><span class="line">            user_level,</span><br><span class="line">            wx_open_id,</span><br><span class="line">            session_key,</span><br><span class="line">            gmt_create,</span><br><span class="line">            gmt_modified,</span><br><span class="line">            is_deleted)</span><br><span class="line">        values (</span><br><span class="line">            #&#123;password&#125;,</span><br><span class="line">            #&#123;name&#125;,</span><br><span class="line">            #&#123;gender&#125;,</span><br><span class="line">            #&#123;birthday&#125;,</span><br><span class="line">            #&#123;mobile&#125;,</span><br><span class="line">            #&#123;nickname&#125;,</span><br><span class="line">            #&#123;rebate&#125;,</span><br><span class="line">            #&#123;avatar&#125;,</span><br><span class="line">            #&#123;roleId&#125;,</span><br><span class="line">            #&#123;lastLoginTime&#125;,</span><br><span class="line">            #&#123;lastLoginIp&#125;,</span><br><span class="line">            #&#123;userLevel&#125;,</span><br><span class="line">            #&#123;wxOpenId&#125;,</span><br><span class="line">            #&#123;sessionKey&#125;,</span><br><span class="line">            #&#123;gmtCreate&#125;,</span><br><span class="line">            #&#123;gmtModified&#125;,</span><br><span class="line">            #&#123;beDeleted&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sql语句之update--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- id 填写在接口中对应的方法名 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- parameterType 填写传入参数的类型，类型名称与java类型相同 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 无 resultType ，因为sql中update方法一定返回此次更新影响的行数，即resultType一定是Integer --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 本文章未提及delete操作，实际上delete操作的返回值也是行数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"editUser"</span> <span class="attr">parameterType</span>=<span class="string">"User"</span> &gt;</span></span><br><span class="line">        update `oomall_user`</span><br><span class="line">        set password=#&#123;password&#125;,</span><br><span class="line">            `name`=#&#123;name&#125;,</span><br><span class="line">            gender=#&#123;gender&#125;,</span><br><span class="line">            birthday=#&#123;birthday&#125;,</span><br><span class="line">            mobile=#&#123;mobile&#125;,</span><br><span class="line">            nickname=#&#123;nickname&#125;,</span><br><span class="line">            rebate=#&#123;rebate&#125;,</span><br><span class="line">            avatar=#&#123;avatar&#125;,</span><br><span class="line">            role_id=#&#123;roleId&#125;,</span><br><span class="line">            last_login_time=#&#123;lastLoginTime&#125;,</span><br><span class="line">            last_login_ip=#&#123;lastLoginIp&#125;,</span><br><span class="line">            user_level=#&#123;userLevel&#125;,</span><br><span class="line">            wx_open_id=#&#123;wxOpenId&#125;,</span><br><span class="line">            session_key=#&#123;sessionKey&#125;,</span><br><span class="line">            gmt_create=#&#123;gmtCreate&#125;,</span><br><span class="line">            gmt_modified=#&#123;gmtModified&#125;,</span><br><span class="line">            is_deleted=#&#123;beDeleted&#125;</span><br><span class="line">        where id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="使用mapper"><a href="#使用mapper" class="headerlink" title="使用mapper"></a>使用mapper</h1><p>到这里，mapper的声明工作已经全部完成了，接下来需要在dao层调用mapper。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xmu.oomall.user.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> xmu.oomall.user.domain.User;</span><br><span class="line"><span class="keyword">import</span> xmu.oomall.user.mapper.UserMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Ringoer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id返回用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findUserById</span><span class="params">(Integer id)</span></span>&#123;<span class="keyword">return</span> userMapper.findUserById(id);&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id返回用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">findUserByName</span><span class="params">(String name)</span></span>&#123;<span class="keyword">return</span> userMapper.findUserByName(name);&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册一个用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>&#123;<span class="keyword">return</span> userMapper.addUser(user);&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改一个用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user 用户对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 行数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">editUser</span><span class="params">(User user)</span></span>&#123;<span class="keyword">return</span> userMapper.editUser(user);&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回用户列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUsers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.findUsers();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用代码如上。</p><p>实际上只需要两行代码，就可以无缝使用mapper：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserMapper userMapper;</span><br></pre></td></tr></table></figure><p>以上即为通过jdbc的java与数据库连接方式。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;和数据库直接联系的，重要的mapper层的配置。&lt;br&gt;
    
    </summary>
    
    
      <category term="J2EE" scheme="http://yoursite.com/categories/J2EE/"/>
    
    
      <category term="J2EE" scheme="http://yoursite.com/tags/J2EE/"/>
    
  </entry>
  
  <entry>
    <title>Spring Swagger 配置</title>
    <link href="http://yoursite.com/J2EE/spring-swagger/"/>
    <id>http://yoursite.com/J2EE/spring-swagger/</id>
    <published>2019-12-31T13:05:00.000Z</published>
    <updated>2019-12-31T13:42:02.582Z</updated>
    
    <content type="html"><![CDATA[<p>Swagger好文明！！</p><p>我再也不拿什么破python破postman调试了！！</p><a id="more"></a><p>第一步，引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>当前版本2.9.2，以后看到这篇文章的同学记得更新版本</p><p>第二步，配置SwaggerConfig类</p><ol><li>新建一个package，叫config，便于管理</li><li>新建一个Java Class，叫SwaggerConfig</li><li>配置如下代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xmu.oomall.user.config;<span class="comment">//包名，可以修改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Parameter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Ringoer</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@notice</span> 下面两个注解一定不要漏了</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这个方法不可以修改</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.withClassAnnotation(RestController.class))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build()</span><br><span class="line">                .apiInfo(apiInfo());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这个方法中所有的字符串都可以修改</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"UserInfoService RESTful API"</span>)</span><br><span class="line">                .description(<span class="string">"3-1 oomall UserInfoService"</span>)</span><br><span class="line">                .termsOfServiceUrl(<span class="string">""</span>)</span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三步，在主启动类上加入注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> xmu.oomall.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Ringoer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(UserApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，直接运行，访问 <code>http://{ip}:{port}/swagger-ui.html</code> 即可看到好文明</p><p>可能出现的bug：</p><ol><li><p>无法启动，报</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compatible version of org.springframework.plugin.core.PluginRegistry</span><br></pre></td></tr></table></figure><p>如果出现这种情况，那就是因为依赖冲突，看看有没有下面这个依赖，有的话删掉即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-rest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>要不然，可以建个空项目，慢慢调节找哪个依赖冲突也可以</p><p>但反正绝对不是spring版本偏高，因为我现在运行的是2.2.2.RELEASE，也可以正常swagger</p></li><li><p>无法启动，报</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NoSuchMethodError</span><br></pre></td></tr></table></figure><p>如果出现这种情况，那就是因为guava版本不对，需要手动指定guava版本</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.guava<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>guava<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>20.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>可以启动，报一个弹窗：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unable to infer base url. This is common when using dynamic servlet registration or when the API is behind an API Gateway. The base url is the root of where all the swagger resources are served. For e.g. if the api is available at http://example.org/api/v2/api-docs then the base url is http://example.org/api/. Please enter the location manually:</span><br></pre></td></tr></table></figure><p>如果出现这种情况，那就是因为配了spring security或者用的不是 <code>@EnableSwagger2</code> 注解</p><p>前者的话去掉security相关依赖，或者手动配置security config都可以</p><p>后者的话请回到文章开头重新配置</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Swagger好文明！！&lt;/p&gt;
&lt;p&gt;我再也不拿什么破python破postman调试了！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="J2EE" scheme="http://yoursite.com/categories/J2EE/"/>
    
    
      <category term="J2EE" scheme="http://yoursite.com/tags/J2EE/"/>
    
  </entry>
  
  <entry>
    <title>20191230中间件相关</title>
    <link href="http://yoursite.com/middleware/middleware-20191230/"/>
    <id>http://yoursite.com/middleware/middleware-20191230/</id>
    <published>2019-12-30T10:09:00.000Z</published>
    <updated>2019-12-31T13:42:21.020Z</updated>
    
    <content type="html"><![CDATA[<p>以下暂时还是一些链接<br><a id="more"></a></p><p><a href="https://www.jianshu.com/p/eb571e4065ec" target="_blank" rel="noopener">MQ消息最终一致性解决方案</a><br><a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=mq%20%E4%B8%80%E8%87%B4%E6%80%A7" target="_blank" rel="noopener">mq 一致性</a><br><a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%20%E4%B8%AD%E9%97%B4%E4%BB%B6" target="_blank" rel="noopener">消息队列 中间件</a><br><a href="https://www.cnblogs.com/wuzm/p/11105176.html" target="_blank" rel="noopener">常见的消息队列中间件介绍</a>  </p><p><a href="https://www.baidu.com/s?ie=UTF-8&amp;wd=%E7%BA%BF%E7%A8%8B%E6%B1%A0%20%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97" target="_blank" rel="noopener">线程池 消息队列</a><br><a href="https://blog.csdn.net/Ares_xb/article/details/89946466" target="_blank" rel="noopener">线程池和消息队列的一些理解</a></p><p><a href="https://www.jianshu.com/p/2accc2840a1b" target="_blank" rel="noopener">如何给老婆解释什么是RPC</a><br><a href="https://www.jianshu.com/p/9cca72f9e93c" target="_blank" rel="noopener">BFF——服务于前端的后端</a></p><p><a href="https://www.cnblogs.com/liujinyu/p/11612728.html" target="_blank" rel="noopener">基于NodeJS进行前后端分离</a><br><a href="https://www.jb51.net/article/150697.htm" target="_blank" rel="noopener">详解从NodeJS搭建中间层再谈前后端分离</a><br><a href="https://www.zhihu.com/question/279322623/answer/406073443" target="_blank" rel="noopener">纯前端开发眼里nodejs到底是什么？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下暂时还是一些链接&lt;br&gt;
    
    </summary>
    
    
      <category term="middleware" scheme="http://yoursite.com/categories/middleware/"/>
    
    
      <category term="J2EE" scheme="http://yoursite.com/tags/J2EE/"/>
    
      <category term="middleware" scheme="http://yoursite.com/tags/middleware/"/>
    
  </entry>
  
  <entry>
    <title>oomall 商城系统 完工总结</title>
    <link href="http://yoursite.com/J2EE/oomall/"/>
    <id>http://yoursite.com/J2EE/oomall/</id>
    <published>2019-12-23T13:29:00.000Z</published>
    <updated>2020-01-02T12:09:33.300Z</updated>
    
    <content type="html"><![CDATA[<p>2019-2020学年第一学期 oomall后端开发项目总结</p><a id="more"></a><h1 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h1><h1 id="全局设计"><a href="#全局设计" class="headerlink" title="全局设计"></a>全局设计</h1><h2 id="用户需求分析"><a href="#用户需求分析" class="headerlink" title="用户需求分析"></a>用户需求分析</h2><h2 id="领域模型分析"><a href="#领域模型分析" class="headerlink" title="领域模型分析"></a>领域模型分析</h2><h2 id="对象模型分析"><a href="#对象模型分析" class="headerlink" title="对象模型分析"></a>对象模型分析</h2><h2 id="Controller层API设计"><a href="#Controller层API设计" class="headerlink" title="Controller层API设计"></a>Controller层API设计</h2><h2 id="系统模块划分"><a href="#系统模块划分" class="headerlink" title="系统模块划分"></a>系统模块划分</h2><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="相关技术"><a href="#相关技术" class="headerlink" title="相关技术"></a>相关技术</h2><h3 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h3><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><h3 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h3><h3 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h3><h4 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h4><h4 id="代码规范"><a href="#代码规范" class="headerlink" title="代码规范"></a>代码规范</h4><p>阿里巴巴 JAVA 开发规约</p><h4 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h4><h4 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h4><h4 id="Maven中多项目管理方法"><a href="#Maven中多项目管理方法" class="headerlink" title="Maven中多项目管理方法"></a>Maven中多项目管理方法</h4><h4 id="Servlet并发机制"><a href="#Servlet并发机制" class="headerlink" title="Servlet并发机制"></a>Servlet并发机制</h4><h4 id="缓存和消息队列"><a href="#缓存和消息队列" class="headerlink" title="缓存和消息队列"></a>缓存和消息队列</h4><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><h4 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h4><h4 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h4><h3 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h3><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="Docker容器"><a href="#Docker容器" class="headerlink" title="Docker容器"></a>Docker容器</h4><h4 id="Linux部署语句"><a href="#Linux部署语句" class="headerlink" title="Linux部署语句"></a>Linux部署语句</h4><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><h4 id="Zuul网关"><a href="#Zuul网关" class="headerlink" title="Zuul网关"></a>Zuul网关</h4><h4 id="Eureka注册中心"><a href="#Eureka注册中心" class="headerlink" title="Eureka注册中心"></a>Eureka注册中心</h4><h4 id="Ribbon"><a href="#Ribbon" class="headerlink" title="Ribbon"></a>Ribbon</h4><h4 id="Nginx服务器"><a href="#Nginx服务器" class="headerlink" title="Nginx服务器"></a>Nginx服务器</h4><h1 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h1><h2 id="商品服务"><a href="#商品服务" class="headerlink" title="商品服务"></a>商品服务</h2><h2 id="订单服务"><a href="#订单服务" class="headerlink" title="订单服务"></a>订单服务</h2><h2 id="用户服务"><a href="#用户服务" class="headerlink" title="用户服务"></a>用户服务</h2><h2 id="运费服务"><a href="#运费服务" class="headerlink" title="运费服务"></a>运费服务</h2><h2 id="分享服务"><a href="#分享服务" class="headerlink" title="分享服务"></a>分享服务</h2><h1 id="个人感想"><a href="#个人感想" class="headerlink" title="个人感想"></a>个人感想</h1><h1 id="项目源代码下载"><a href="#项目源代码下载" class="headerlink" title="项目源代码下载"></a>项目源代码下载</h1><p><a href="http://download.ringoer.com/oomall-user.zip" target="_blank" rel="noopener">user</a></p><h1 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>xmu.oomall<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>user<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>user<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>3-1 oomall user Service<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>11<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--normal--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web-services<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--sql--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis-reactive<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--json--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--configuration--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--eureka-client--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--feign--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--logger--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>Finchley.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>mybatis-generator/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019-2020学年第一学期 oomall后端开发项目总结&lt;/p&gt;
    
    </summary>
    
    
      <category term="J2EE" scheme="http://yoursite.com/categories/J2EE/"/>
    
    
      <category term="J2EE" scheme="http://yoursite.com/tags/J2EE/"/>
    
      <category term="backEnd" scheme="http://yoursite.com/tags/backEnd/"/>
    
  </entry>
  
  <entry>
    <title>Zuul IDEA配置</title>
    <link href="http://yoursite.com/others/zuul/"/>
    <id>http://yoursite.com/others/zuul/</id>
    <published>2019-12-06T08:30:00.000Z</published>
    <updated>2019-12-23T13:43:54.203Z</updated>
    
    <content type="html"><![CDATA[<p>关于注解@EnableZuulProxy的坑<br><a id="more"></a><br>需要以下依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>其中<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>是重要的一环，因为查看spring官网及spring中央仓库可以发现，spring boot2.1.x及以后对应的cloud版本已经不推荐使用上述jar包，所以需要手动指明版本号</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于注解@EnableZuulProxy的坑&lt;br&gt;
    
    </summary>
    
    
      <category term="others" scheme="http://yoursite.com/categories/others/"/>
    
    
      <category term="J2EE" scheme="http://yoursite.com/tags/J2EE/"/>
    
  </entry>
  
  <entry>
    <title>20191128 oomall提交订单部分代码解读</title>
    <link href="http://yoursite.com/others/20191128oomall/"/>
    <id>http://yoursite.com/others/20191128oomall/</id>
    <published>2019-11-28T12:30:00.000Z</published>
    <updated>2019-11-28T13:59:45.422Z</updated>
    
    <content type="html"><![CDATA[<p>20191128读邱明老师代码后的解读<br><a id="more"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文章的代码基础：<a href="http://download.ringoer.com/SpringDemo-master.rar" target="_blank" rel="noopener">点我下载</a></p><p>本文章按照自底向上的顺序描述提交订单部分的代码逻辑</p><h1 id="util"><a href="#util" class="headerlink" title="util"></a>util</h1><p>工具类</p><h2 id="Common"><a href="#Common" class="headerlink" title="Common"></a><span id="util-Common">Common</span></h2><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getRandomNum</span><span class="params">(<span class="keyword">int</span> length)</span></span></span><br></pre></td></tr></table></figure><p>传入想要的数字长度，生成唯一随机数</p></li></ul><h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a><span id="util-Config">Config</span></h2><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Integer <span class="title">getMaxPayTime</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>获得最长付款时间</p><p>实际上就是对于订单付款期限的全局设定</p></li></ul><h2 id="JacksonUtil"><a href="#JacksonUtil" class="headerlink" title="JacksonUtil"></a><span id="util-JacksonUtil">JacksonUtil</span></h2><ul><li>传入json字符串和file，在json字符串中，用field作为key，返回value</li><li>传入json字符串，返回json对象</li><li>传入json字符串，返回map</li><li>传入对象，返回json字符串</li></ul><h2 id="ResponseUtil"><a href="#ResponseUtil" class="headerlink" title="ResponseUtil"></a><span id="util-ResponseUtil">ResponseUtil</span></h2><p>描述了对于一个操作的响应</p><p>每个响应都是一个Map&lt;String, Object&gt;，包括3个字段：</p><ol><li>errno : 错误码</li><li>errmsg : 错误消息</li><li>data : 响应数据</li></ol><p>该工具类存在的主要原因，是为了统一返回格式</p><h1 id="domain"><a href="#domain" class="headerlink" title="domain"></a>domain</h1><p>负责描述所有类</p><p>所有实体类都包含通用的1-5，以下在每个实体类内均只描述其特性</p><ol><li>包含表示一个类的若干字段</li><li>有非功能方法toString()</li><li>有重载方法equals，用于判定两个对象是否是同一对象</li><li>有重载方法hashCode，返回对该对象的id的哈希结果</li><li>各字段均包含public权限的get和set方法</li></ol><h2 id="cart"><a href="#cart" class="headerlink" title="cart"></a>cart</h2><h3 id="CartItem"><a href="#CartItem" class="headerlink" title="CartItem"></a><span id="domain-cart-CartItem">CartItem</span></h3><p>此处与商品的关系表现在，一个CartItem内保存的是Product的id</p><h2 id="coupon"><a href="#coupon" class="headerlink" title="coupon"></a>coupon</h2><h3 id="AbstractCouponStrategy"><a href="#AbstractCouponStrategy" class="headerlink" title="AbstractCouponStrategy"></a><span id="domain-coupon-AbstractCouponStrategy">AbstractCouponStrategy</span></h3><p>一个抽象类，描述了计算一个订单优惠后的价格计算方法</p><p>只具体写了cacuDiscount方法,用于计算适用折扣后的OrderItem列表：</p><ol><li><p>传入OrderItems和couponSn（优惠券序号）</p></li><li><p>判断优惠门槛</p></li><li><p>若满足门槛，计算优惠后的价格</p><ol><li><p>将优惠减免金额平均分配到各商品</p></li><li><p>若理论总价与实际总价不符</p><ul><li><p>寻找数量为1的Item，将差价补偿在该Item上</p></li><li><p>无数量为1的Item</p><ol><li>将第一个Item拆开，变成两个Item，其中一个数量为n-1，另一个为1</li><li>将差价补偿在数量为1的Item上</li></ol></li></ul></li></ol></li><li><p>返回该列表</p></li></ol><p>要求子类实现：</p><ol><li>boolean isEnough方法，判断是否已经满足优惠门槛</li><li>BigDecimal getDealPrice方法，计算折扣后价格</li><li>BigDecimal getError方法，获得理论总价与实际总价的误差</li></ol><h3 id="CashOffStrategy"><a href="#CashOffStrategy" class="headerlink" title="CashOffStrategy"></a><span id="domain-coupon-CashOffStrategy">CashOffStrategy</span></h3><p>策略为满X减Y</p><p>继承了AbstractCouponStrategy类，实现了其中要求的方法，成为实体类，负责计算优惠后的OrderItem列表</p><h3 id="PercentageStrategy"><a href="#PercentageStrategy" class="headerlink" title="PercentageStrategy"></a><span id="domain-coupon-PercentageStrategy">PercentageStrategy</span></h3><p>策略为满X减Y%</p><p>继承了AbstractCouponStrategy类，实现了其中要求的方法，成为实体类，负责计算优惠后的OrderItem列表</p><h3 id="Coupon"><a href="#Coupon" class="headerlink" title="Coupon"></a><span id="domain-coupon-Coupon">Coupon</span></h3><p>包含类内enum类型子类Status。该子类包含2个参数</p><ol><li>String name，表示当前优惠券所处状态</li><li>Integer value，表示该状态的状态码</li></ol><p>同时，有方法：</p><ol><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cacuCouponPrice</span><span class="params">(Order order)</span></span></span><br></pre></td></tr></table></figure><p>借助<a href="#domain-coupon-CouponRule">CouponRule</a>来计算CouponPrice</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isReadyToUse</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></li></ol><p>  判断该优惠券当前是否可用</p><h3 id="CouponRulePo"><a href="#CouponRulePo" class="headerlink" title="CouponRulePo"></a><span id="domain-coupon-CouponRulePo">CouponRulePo</span></h3><p>描述了作为一个优惠券所需的全部静态信息</p><p>但由于优惠券适用的方法较多，所以方法拆开到另一个类中实现</p><h3 id="CouponRule"><a href="#CouponRule" class="headerlink" title="CouponRule"></a><span id="domain-coupon-CouponRule">CouponRule</span></h3><p>在类中声明一个realObj来与CouponRulePo建立联系</p><p>实现了能用于优惠券的各种方法:</p><ol><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> List&lt;OrderItem&gt; <span class="title">getValidItems</span><span class="params">(List&lt;OrderItem&gt; items)</span></span></span><br></pre></td></tr></table></figure><p>传入订单的子订单列表，返回可以适用所选当前CouponRule的子订单列表</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> AbstractCouponStrategy <span class="title">getStrategy</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>获得当前CouponRule所属的折扣策略</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStrategy</span><span class="params">(AbstractCouponStrategy strategy)</span></span></span><br></pre></td></tr></table></figure><p>传入新的折扣策略方案，将当前CouponRule所属折扣测了更新</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isUsedOnGoods</span><span class="params">(Integer goodsId)</span></span></span><br></pre></td></tr></table></figure><p>传入商品id，判断该商品是否能够使用当前CouponRule</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">getGoodsIds</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>获得当前CouponRule所适用的商品id列表</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGoodsIds</span><span class="params">(List&lt;Integer&gt; goodsIds)</span></span></span><br></pre></td></tr></table></figure><p>传入商品id列表，更新当前CouponRule所适用的商品id列表</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cacuCouponPrice</span><span class="params">(Order order, String couponSn)</span></span></span><br></pre></td></tr></table></figure><p>传入订单和使用的优惠券序号，借助<a href="#domain-coupon-CashOffStrategy">CashOffStrategy</a>，更新订单Items为适用了优惠券策略后的订单Items</p></li></ol><h2 id="goods"><a href="#goods" class="headerlink" title="goods"></a>goods</h2><h3 id="AbstractPaymentStrategy"><a href="#AbstractPaymentStrategy" class="headerlink" title="AbstractPaymentStrategy"></a><span id="domain-goods-AbstractPaymentStrategy">AbstractPaymentStrategy</span></h3><p>仅定义了 活动付款策略 的接口</p><h3 id="Goods"><a href="#Goods" class="headerlink" title="Goods"></a><span id="domain-goods-Goods">Goods</span></h3><p>含有字段products，以此与Product建立联系</p><h3 id="Product"><a href="#Product" class="headerlink" title="Product"></a><span id="domain-goods-Product">Product</span></h3><p>无特性</p><h3 id="PromotionPo"><a href="#PromotionPo" class="headerlink" title="PromotionPo"></a><span id="domain-goods-PromotionPo">PromotionPo</span></h3><p>描述一个商品的优惠活动策略</p><p>无方法</p><h3 id="Promotion"><a href="#Promotion" class="headerlink" title="Promotion"></a><span id="domain-goods-Promotion">Promotion</span></h3><p>实现了PromotionPo需要的方法</p><p>对于PromotionPo和Promotion，看代码完成度，认为应该是未实现</p><p>参考Coupon内的策略写法，应该还有</p><ol><li>填充完整的抽象付款策略类</li><li>未给出的策略类，继承了抽象付款策略类</li></ol><h2 id="order"><a href="#order" class="headerlink" title="order"></a>order</h2><h3 id="Order"><a href="#Order" class="headerlink" title="Order"></a><span id="domain-order-Order">Order</span></h3><p>包含类内enum类型子类Status。该子类包含2个参数</p><ol><li>String name，表示当前订单所处状态</li><li>Integer value，表示该状态的状态码</li></ol><p>含有4种方法：</p><ol><li><p>构造函数</p><p>有2种方案</p><ol><li>不传参数</li><li>传入user和address</li></ol></li><li><p>计算价格</p><ol><li><p>先执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cacuDealPrice</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>借助<a href="#domain-coupon-Coupon">Coupon</a>算出使用的优惠券情况</p></li><li><p>再执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cacuTotal</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><p>算出订单总价</p></li></ol></li><li><p>反向绑定。</p><p>在OrderItem中绑定Order的id</p></li><li><p>借助<a href="#domain-Payment">Payment</a>计算付款方式</p></li></ol><h3 id="OrderItem"><a href="#OrderItem" class="headerlink" title="OrderItem"></a><span id="domain-order-OrderItem">OrderItem</span></h3><p>继承自Cloneable类，这意味着该类实例可以被克隆</p><p>冗余存储productName</p><p>含有2种方法：</p><ol><li>构造函数<ol><li>不传参数</li><li>传入cartItem</li></ol></li><li>重载的clone方法，指示了如何克隆该类的实例</li></ol><h2 id="user"><a href="#user" class="headerlink" title="user"></a>user</h2><h3 id="Address"><a href="#Address" class="headerlink" title="Address"></a><span id="domain-user-Address">Address</span></h3><p>无特性</p><h3 id="User"><a href="#User" class="headerlink" title="User"></a><span id="domain-user-User">User</span></h3><p>无特性</p><h2 id="GrouponOnRule"><a href="#GrouponOnRule" class="headerlink" title="GrouponOnRule"></a><span id="domain-GrouponOnRule">GrouponOnRule</span></h2><p>无特性</p><h2 id="GrouponOnStrategy"><a href="#GrouponOnStrategy" class="headerlink" title="GrouponOnStrategy"></a><span id="domain-GrouponOnStrategy">GrouponOnStrategy</span></h2><p>无特性（该模块代码未完成）</p><h2 id="Payment"><a href="#Payment" class="headerlink" title="Payment"></a><span id="domain-Payment">Payment</span></h2><p>包含类内enum类型子类Status。该子类包含2个参数</p><ol><li>String name，表示当前payment所处状态</li><li>Integer value，表示该状态的状态码</li></ol><p>含有一个不传参数的构造函数</p><h1 id="mapper"><a href="#mapper" class="headerlink" title="mapper"></a>mapper</h1><p>负责直接和数据库交互</p><p>以下各个Mapper均由java文件和xml文件构成，其中：</p><ol><li>java文件定义为接口，提供若干方法</li><li>xml文件用xml语言描述了java文件中的方法的sql实现</li></ol><p>每个类都要加上 <code>@Mapper</code> 注解</p><h2 id="CartItemMapper"><a href="#CartItemMapper" class="headerlink" title="CartItemMapper"></a><span id="mapper-CartItemMapper">CartItemMapper</span></h2><p>提供了2个方法</p><ol><li>传入购物车对象id，以id获得购物车明细</li><li>传入购物车对象列表，删除购物车中指定的项目</li></ol><h2 id="CouponMapper"><a href="#CouponMapper" class="headerlink" title="CouponMapper"></a><span id="mapper-CouponMapper">CouponMapper</span></h2><p>提供了2个方法</p><ol><li>传入优惠券对象id，以id获得一张优惠券的明细</li><li>传入优惠券对象id，以id获得该优惠券所属规则的明细</li></ol><h2 id="GoodsMapper"><a href="#GoodsMapper" class="headerlink" title="GoodsMapper"></a><span id="mapper-GoodsMapper">GoodsMapper</span></h2><p>提供了2个方法</p><ol><li>传入product对象id，以id获得product明细</li><li>传入商品对象id，以id获得商品明细</li></ol><h2 id="OrderMapper"><a href="#OrderMapper" class="headerlink" title="OrderMapper"></a><span id="mapper-OrderMapper">OrderMapper</span></h2><p>提供了3个方法</p><ol><li>传入订单id，以id获得订单明细</li><li>传入订单对象，新增一个订单</li><li>传入子订单列表，新增订单中的所有明细</li></ol><h1 id="dao"><a href="#dao" class="headerlink" title="dao"></a>dao</h1><p>负责数据的交流</p><p>对service层表现为数据来源，对mapper层表现为数据调用者</p><p>每个类都要加上 <code>@Repository</code> 注解</p><p>以下均只描述提供的方法</p><h2 id="CartItemDao"><a href="#CartItemDao" class="headerlink" title="CartItemDao"></a><span id="dao-CartItemDao">CartItemDao</span></h2><p>借助<a href="#mapper-CartItemMapper">CartItemMapper</a>读取数据</p><ul><li>用id返回购物车明细</li></ul><h2 id="CouponDao"><a href="#CouponDao" class="headerlink" title="CouponDao"></a><span id="dao-CouponDao">CouponDao</span></h2><p>借助<a href="#mapper-CouponMapper">CouponMapper</a>读取数据</p><ul><li>用id返回优惠券明细</li></ul><h2 id="GoodsDao"><a href="#GoodsDao" class="headerlink" title="GoodsDao"></a><span id="dao-GoodsDao">GoodsDao</span></h2><p>借助<a href="#mapper-GoodsMapper">GoodsMapper</a>读取数据</p><ul><li>用id返回product明细</li></ul><h2 id="OrderDao"><a href="#OrderDao" class="headerlink" title="OrderDao"></a><span id="dao-OrderDao">OrderDao</span></h2><p>借助<a href="#mapper-OrderMapper">OrderMapper</a>读取数据</p><ul><li>用id返回order明细</li></ul><h1 id="service"><a href="#service" class="headerlink" title="service"></a>service</h1><p>负责业务的具体实现，需要数据的时候均访问dao层</p><p>每个Service都是先提供一个接口，然后写具体的实现（impl）</p><p>每个类都要加上 <code>@Service</code> 注解</p><p>以下省略对接口的描述，直接描述实现</p><h2 id="CartItemServiceImpl"><a href="#CartItemServiceImpl" class="headerlink" title="CartItemServiceImpl"></a><span id="service-CartItemServiceImpl">CartItemServiceImpl</span></h2><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> CartItem <span class="title">findCartItemById</span><span class="params">(Integer id)</span></span></span><br></pre></td></tr></table></figure><p>根据cartItem id，借助<a href="#dao-CartItemDao">CartItemDao</a>，返回该cartItem的明细</p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearCartItem</span><span class="params">(List&lt;CartItem&gt; cartItems)</span></span></span><br></pre></td></tr></table></figure><p>根据传入的cartItem列表，借助<a href="#mapper-CartItemMapper">CartItemMapper</a>，清除原购物车中的cartItems</p></li></ul><h2 id="CouponServiceImpl"><a href="#CouponServiceImpl" class="headerlink" title="CouponServiceImpl"></a><span id="service-CouponServiceImpl">CouponServiceImpl</span></h2><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Coupon <span class="title">findCouponById</span><span class="params">(Integer id)</span></span></span><br></pre></td></tr></table></figure><p>根据coupon id，借助<a href="#dao-CouponDao">CouponDao</a>，返回该coupon明细</p></li></ul><h2 id="GoodsServiceImpl"><a href="#GoodsServiceImpl" class="headerlink" title="GoodsServiceImpl"></a><span id="service-GoodsServiceImpl">GoodsServiceImpl</span></h2><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Product <span class="title">findProductById</span><span class="params">(Integer id)</span></span></span><br></pre></td></tr></table></figure><p>根据product id，借助<a href="#dao-GoodsDao">GoodsDao</a>，返回该product明细</p></li></ul><h2 id="OrderServiceImpl"><a href="#OrderServiceImpl" class="headerlink" title="OrderServiceImpl"></a><span id="service-OrderServiceImpl">OrderServiceImpl</span></h2><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Order <span class="title">submit</span><span class="params">(Order order, List&lt;CartItem&gt; cartItems)</span></span></span><br></pre></td></tr></table></figure><ol><li>传入空订单和cartItems</li><li>组装订单</li><li>借助<a href="#service-CartItemServiceImpl">CartItemServiceImpl</a>，清除原购物车中在该订单内选中的商品</li><li>使用<a href="#domain-order-Order">Order</a>的cacuDealPrice方法计算优惠价</li><li>使用<a href="#domain-order-Order">Order</a>的cacuPayment方法计算订单总价</li><li>返回组装完成的订单</li></ol></li></ul><h1 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h1><p>负责描述用例</p><h2 id="OrderSubmitVO"><a href="#OrderSubmitVO" class="headerlink" title="OrderSubmitVO"></a><span id="controller-OrderSubmitVO">OrderSubmitVO</span></h2><ol><li><p>该VO类内有4个字段</p><ol><li>cartItems，是Integer类型的List，保存订单内所选中的商品的id</li><li>address，是Address类型，保存订单内选中的地址id</li><li>couponId，是Integer类型，保存订单内选中的优惠券id<ul><li>这也意味着一个订单只能使用一张优惠券</li></ul></li><li>message，是String类型，保存别的消息信息，起到一个备用的作用</li></ol><p>同时，有一个非功能方法：toString()</p></li><li><p>4个字段各自有public权限的get和set方法，用于给Controller使用</p></li><li><p>该VO只用于承接前端提交的订单信息，无其它功能</p></li></ol><h2 id="OrderController"><a href="#OrderController" class="headerlink" title="OrderController"></a><span id="controller-OrderController">OrderController</span></h2><ol><li><p>声明Controller为RestController，设置RMap</p></li><li><p>定义需要使用的服务类的实体，自动装配（Controller内公用）</p><ol><li>OrderService</li><li>CartService</li><li>CouponService</li></ol></li><li><p>进入具体行为（Post）及实现方法submit</p><ol><li><p>submit方法在此处定义为Object类型，表示要返回一个对象。可以看到在该方法结尾有一个return ResponseUtil.ok(retOrder)语句，说明返回到前端的对象就是ResponseUtil.ok(retOrder)的返回值</p><p><a href="#util-ResponseUtil">ResponseUtil类</a></p></li><li><p>回到submit方法，参数列表有1个参数，带有@RequestBody注解，表明参数来自前端传值；同时参数声明为<a href="#controller-OrderSubmitVo">OrderSubmitVo类型</a>，表明前端传值到达后端后先拼装为一个OrderSubmitVo的实例</p></li><li><p>进入方法，可以看到在方法刚开始和即将结束之处都有logger.debug语句，生成调试日志。此处与主要功能无关</p></li><li><p>获得生成一个订单的各种主要信息，包括：</p><ol><li>user</li><li>address</li><li>coupon</li><li>cartitems</li></ol><p>其中coupon需要判空，cartItems则因为前端只传回了cartItems的id，所以需要<a href="#service-CartItemServiceImpl">CartItemServiceImpl</a>来获得每个cartitem的具体信息</p></li><li><p>新建一个空订单，保存除了商品之外的信息（第58行）</p><ol><li>新建一个用商品装填好的订单。此处使用<a href="#service-OrderServiceImpl">OrderServiceImpl</a>的submit方法装填，传入参数为空订单和cartitem列表</li><li>构造返回对象，返回到前端，订单提交结束</li></ol></li></ol></li><li><p>Controller完毕</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;20191128读邱明老师代码后的解读&lt;br&gt;
    
    </summary>
    
    
      <category term="others" scheme="http://yoursite.com/categories/others/"/>
    
    
      <category term="J2EE" scheme="http://yoursite.com/tags/J2EE/"/>
    
      <category term="OOAD" scheme="http://yoursite.com/tags/OOAD/"/>
    
  </entry>
  
  <entry>
    <title>20190926 随录</title>
    <link href="http://yoursite.com/diary/20190926/"/>
    <id>http://yoursite.com/diary/20190926/</id>
    <published>2019-09-26T13:34:00.000Z</published>
    <updated>2019-09-26T13:45:44.043Z</updated>
    
    <content type="html"><![CDATA[<p>记一次由一句注释引发的三小时惨案……<br><a id="more"></a><br>今天想着玩玩spring boot，遂搭了个hello spring的demo<br>然后想试试dao和thymeleaf，于是什么都玩玩<br>然后发现了这篇文章：<br><a href="https://www.jianshu.com/p/efdd7c92640c" target="_blank" rel="noopener">https://www.jianshu.com/p/efdd7c92640c</a><br>其中有段代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Autowired</span></span><br><span class="line">        <span class="keyword">private</span> UserService userService;</span><br><span class="line">        <span class="meta">@RequestMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">(ModelMap modelMap)</span> </span>&#123;</span><br><span class="line">                 modelMap.addAttribute(<span class="string">"host"</span>,<span class="string">"www.baidu.com"</span>);</span><br><span class="line">                 <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>照抄之后，我暂时没有UserService类，所以先把<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure></p><p>给注释掉了<br>然后惨案就发生了……<br>在build的时候，IDEA不停报错，说<br><code>Consider defining a bean of type &#39;org.springframework.ui.ModelMap&#39; in your configuration.</code><br>为了de这个bug，不停地来往于baidu和google，发现根本没有人遇到和我一样的情况。这是什么意思？？？<br>于是一口闷气在我胸口淤积……<br>甚至对照了以前的项目也没发现什么问题，External Libraries甚至都是一模一样的……<br>差点血都吐出来了，心情差得很<br>经过3个小时的思考与辨析，终于发现——————————<br>我因为注释掉了那句定义，导致@Autowired影响到了下面的方法！！！！<br>因为@Autowired的影响，所以IDEA才会一直问我要Model的bean的definition！！！<br>删掉@Autowired和注释后终于正常build了，然后发现返回的是字符串index……<br>思考了一下，@RestController是不能返回页面的，想返回页面只能是@Controller，修改之后正常了……<br>然而我今天也无心搞下去了，明天再说吧……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记一次由一句注释引发的三小时惨案……&lt;br&gt;
    
    </summary>
    
    
      <category term="diary" scheme="http://yoursite.com/categories/diary/"/>
    
    
      <category term="diary" scheme="http://yoursite.com/tags/diary/"/>
    
  </entry>
  
  <entry>
    <title>课程表存档</title>
    <link href="http://yoursite.com/schedule/schedule-of-classes/"/>
    <id>http://yoursite.com/schedule/schedule-of-classes/</id>
    <published>2019-09-16T04:18:00.000Z</published>
    <updated>2019-09-16T04:37:40.858Z</updated>
    
    <content type="html"><![CDATA[<p>用来给自己的课程表存档。<br>目前仅大学课程表。<br><a id="more"></a><br>2019-2020-schedule-1<br><img src="http://pic.ringoer.com/2019-2020-schedule-1.png" alt="2019-2020-schedule-1"><br>2018-2019-schedule-3<br><img src="http://pic.ringoer.com/2018-2019-schedule-3.png" alt="2018-2019-schedule-3"><br>2018-2019-schedule-2<br><img src="http://pic.ringoer.com/2018-2019-schedule-2.png" alt="2018-2019-schedule-2"><br>2018-2019-schedule-1<br><img src="http://pic.ringoer.com/2018-2019-schedule-1.png" alt="2018-2019-schedule-1"><br>2017-2018-schedule-3<br><img src="http://pic.ringoer.com/2017-2018-schedule-3.png" alt="2017-2018-schedule-3"><br>2017-2018-schedule-2<br><img src="http://pic.ringoer.com/2017-2018-schedule-2.png" alt="2017-2018-schedule-2"><br>2017-2018-schedule-1<br><img src="http://pic.ringoer.com/2017-2018-schedule-1.png" alt="2017-2018-schedule-1"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用来给自己的课程表存档。&lt;br&gt;目前仅大学课程表。&lt;br&gt;
    
    </summary>
    
    
      <category term="schedule" scheme="http://yoursite.com/categories/schedule/"/>
    
    
      <category term="schedule" scheme="http://yoursite.com/tags/schedule/"/>
    
  </entry>
  
  <entry>
    <title>20190908 Keras试用</title>
    <link href="http://yoursite.com/Keras/20190908/"/>
    <id>http://yoursite.com/Keras/20190908/</id>
    <published>2019-09-08T11:43:00.000Z</published>
    <updated>2019-09-08T12:31:34.515Z</updated>
    
    <content type="html"><![CDATA[<p>尝试了二元线性回归。<br><a id="more"></a><br>只有代码和注释。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#期望平面z=-6x+y+8</span></span><br><span class="line">trX = np.random.uniform(<span class="number">-100</span>, <span class="number">100</span>, size=<span class="number">1001</span>)</span><br><span class="line">trY = np.random.uniform(<span class="number">-100</span>, <span class="number">100</span>, size=<span class="number">1001</span>)</span><br><span class="line">trZ = <span class="number">8</span> - <span class="number">6</span> * trX + trY + np.random.randn(*trX.shape) * <span class="number">0.2</span></span><br><span class="line">trXY = np.array(list(zip(trX,trY)))</span><br><span class="line"></span><br><span class="line">model = Sequential()</span><br><span class="line"><span class="comment">#模型实现输入[x,y]，输出对应的z，属于2个输入决定一个输出，所以</span></span><br><span class="line"><span class="comment">#第一层Dense的input_dim=2</span></span><br><span class="line"><span class="comment">#最后一层Dense的output_dim=1</span></span><br><span class="line">model.add(Dense(input_dim=<span class="number">2</span>, output_dim=<span class="number">200</span>, init=<span class="string">'uniform'</span>, activation=<span class="string">'linear'</span>))</span><br><span class="line">model.add(Dense(input_dim=<span class="number">200</span>, output_dim=<span class="number">1</span>, init=<span class="string">'uniform'</span>, activation=<span class="string">'linear'</span>))</span><br><span class="line"></span><br><span class="line">model.compile(optimizer=<span class="string">'adam'</span>, loss=<span class="string">'mse'</span>)</span><br><span class="line"></span><br><span class="line">model.fit(trXY, trZ, nb_epoch=<span class="number">200</span>, verbose=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">testX = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">0</span>]</span><br><span class="line">testY = [<span class="number">1</span>,<span class="number">0</span>,<span class="number">4</span>]</span><br><span class="line">testXY = np.array(list(zip(testX,testY)))</span><br><span class="line">res = model.predict(testXY)</span><br><span class="line">print(testXY)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></p><p>关于zip()方法<br>设有<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b=[<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c=[<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>]</span><br></pre></td></tr></table></figure></p><p>则有以下结果：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d=zip(a,b,c)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">&lt;zip object at <span class="number">0x0000019C55381848</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(d)</span><br><span class="line">[(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>), (<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d=[list(i) <span class="keyword">for</span> i <span class="keyword">in</span> zip(a,b,c)]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">[[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]</span><br></pre></td></tr></table></figure></p><p>可见zip()方法的参数列表是可变参数列表，可以传入n个参数</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尝试了二元线性回归。&lt;br&gt;
    
    </summary>
    
    
      <category term="Keras" scheme="http://yoursite.com/categories/Keras/"/>
    
    
      <category term="Keras" scheme="http://yoursite.com/tags/Keras/"/>
    
  </entry>
  
  <entry>
    <title>20190907 Keras试用</title>
    <link href="http://yoursite.com/Keras/20190907/"/>
    <id>http://yoursite.com/Keras/20190907/</id>
    <published>2019-09-07T15:09:00.000Z</published>
    <updated>2019-09-08T11:44:06.986Z</updated>
    
    <content type="html"><![CDATA[<p>第一次入门TensorFlow，然后先搞搞Keras。<br><a id="more"></a><br>装环境：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorflow</span><br></pre></td></tr></table></figure></p><p>没有合适版本的话，检查一下自己的pip是不是最新版的，python是32位还是64位。  </p><p>入门代码：线性回归<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keras</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成训练集</span></span><br><span class="line"><span class="comment">#trX和trY表示训练用的1000个点二维坐标的x和y，类型是nparray</span></span><br><span class="line"><span class="comment">#trX中，有1000组数据，每组数据只有1个元素，所以下文中Dense的input_dim=1</span></span><br><span class="line">trX = np.random.uniform(<span class="number">-100</span>, <span class="number">100</span>, size=<span class="number">1000</span>) <span class="comment">#生成1000个在-100~100之间的随机数，返回一个nparray</span></span><br><span class="line">trY = <span class="number">5</span> * trX + <span class="number">6</span> + np.random.randn(*trX.shape) * <span class="number">0.2</span> <span class="comment">#期望y=5x+6，并加入一点点随机波动</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#实例化model为层次模型</span></span><br><span class="line">model = Sequential()</span><br><span class="line"></span><br><span class="line"><span class="comment">#为模型添加layer</span></span><br><span class="line"><span class="comment">#本示例是RNN，所以使用Dense作为layer</span></span><br><span class="line"><span class="comment">#前一个Dense的output_dim必须和后一个的input_dim相同</span></span><br><span class="line"><span class="comment">#第一个Dense的input_dim必须等于训练集输入的每组元素数</span></span><br><span class="line"><span class="comment">#最后一个的output_dim必须等于训练集输出输出的每组元素数</span></span><br><span class="line">model.add(Dense(input_dim=<span class="number">1</span>, output_dim=<span class="number">200</span>, init=<span class="string">'uniform'</span>, activation=<span class="string">'linear'</span>))</span><br><span class="line">model.add(Dense(input_dim=<span class="number">200</span>, output_dim=<span class="number">1</span>, init=<span class="string">'uniform'</span>, activation=<span class="string">'linear'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译模型，准备训练</span></span><br><span class="line"><span class="comment">#optimizer是优化器，一般选adam</span></span><br><span class="line"><span class="comment">#loss是损失函数，一般使用mse（均方误差）即可</span></span><br><span class="line"><span class="comment">#loss越小，说明训练效果越好，但要小心过拟合</span></span><br><span class="line">model.compile(optimizer=<span class="string">'adam'</span>, loss=<span class="string">'mse'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#训练</span></span><br><span class="line"><span class="comment">#trX处填写训练集输入，trY处填写训练集输出</span></span><br><span class="line"><span class="comment">#nb_epoch是迭代次数，verbose=1表示在控制台输出每次epoch的信息</span></span><br><span class="line">model.fit(trX, trY, nb_epoch=<span class="number">200</span>, verbose=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#np.array()要求传入一个list，返回一个nparray</span></span><br><span class="line"><span class="comment">#arr.tolist()要求arr是一个nparray，返回一个list</span></span><br><span class="line"><span class="comment">#model.predict要求传入一个nparray</span></span><br><span class="line">l = np.array([<span class="number">3</span>,<span class="number">1</span>,<span class="number">-5</span>,<span class="number">-23</span>,<span class="number">-42</span>,<span class="number">52</span>]) <span class="comment">#测试集</span></span><br><span class="line">res = model.predict(l) <span class="comment">#结果</span></span><br><span class="line">print(l)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次入门TensorFlow，然后先搞搞Keras。&lt;br&gt;
    
    </summary>
    
    
      <category term="Keras" scheme="http://yoursite.com/categories/Keras/"/>
    
    
      <category term="Keras" scheme="http://yoursite.com/tags/Keras/"/>
    
  </entry>
  
  <entry>
    <title>20190715 Python学习随录</title>
    <link href="http://yoursite.com/python/python-20190715/"/>
    <id>http://yoursite.com/python/python-20190715/</id>
    <published>2019-07-15T06:32:00.000Z</published>
    <updated>2019-07-15T08:53:28.443Z</updated>
    
    <content type="html"><![CDATA[<p>学习随录系列<br><a id="more"></a><br>功能：实现对一个由若干行组成、每行均为[0.xxx, 0.xxx, …]格式的json文件的裁剪</p><p>README</p><ol><li>在同一目录下新建一个input.txt，其中存放需要转换的文件名。<br>！仅文件名，无后缀名，无路径</li><li>在该目录下放置同名的json文件</li><li>在该目录启动cmd，运行该py文件</li><li>本代码只注重效率，未考虑文件读取失败的问题，故请确保有合法输入文件</li></ol><p>代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"></span><br><span class="line">numbers = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>] <span class="comment">#只保留numbers[i]的整数倍行</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'input.txt'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> input_file: <span class="comment">#读取文件名</span></span><br><span class="line"></span><br><span class="line">files = input_file.read().decode(<span class="string">'utf-8'</span>).split(<span class="string">'\r'</span>) <span class="comment">#读取.解码.分割</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> files: <span class="comment">#遍历</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> filename == <span class="string">'\n'</span> <span class="keyword">or</span> filename == <span class="string">'\r'</span>:</span><br><span class="line"><span class="keyword">break</span> <span class="comment">#防止空行异常跳出</span></span><br><span class="line"><span class="keyword">if</span> filename[<span class="number">0</span>] == <span class="string">'\n'</span>:</span><br><span class="line">filename = filename[<span class="number">1</span>:] <span class="comment">#防止前导换行符</span></span><br><span class="line"><span class="keyword">if</span> filename[len(filename)<span class="number">-1</span>] == <span class="string">'\n'</span>:</span><br><span class="line">filename = filename[:len(filename)<span class="number">-1</span>] <span class="comment">#防止后置换行符</span></span><br><span class="line"></span><br><span class="line">infile = filename + <span class="string">'.'</span> + <span class="string">'json'</span> <span class="comment">#构造输入文件名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> numbers: <span class="comment">#遍历切割依据</span></span><br><span class="line"></span><br><span class="line">outfile = filename + <span class="string">'-'</span> + str(n) + <span class="string">'.'</span> + <span class="string">'json'</span> <span class="comment">#构造输出文件名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(infile, <span class="string">'rb'</span>) <span class="keyword">as</span> fr: <span class="comment">#打开输入文件</span></span><br><span class="line">file_str = fr.read().decode(<span class="string">'utf-8'</span>).split(<span class="string">'['</span>) <span class="comment">#读取.解码.分割</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(outfile, <span class="string">'wb'</span>) <span class="keyword">as</span> fw: <span class="comment">#打开输出文件</span></span><br><span class="line">ans = file_str[<span class="number">0</span>] + <span class="string">'['</span> <span class="comment">#预置</span></span><br><span class="line">i = n + <span class="number">1</span> <span class="comment">#取数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i &lt; len(file_str): <span class="comment">#取所需行</span></span><br><span class="line">ans += <span class="string">'['</span> + file_str[i] <span class="comment">#构造输出文件</span></span><br><span class="line">i += n</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ans[len(ans)<span class="number">-1</span>] != <span class="string">'&#125;'</span>: <span class="comment">#防止异常结束</span></span><br><span class="line">i = len(ans) - <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> ans[i] != <span class="string">','</span>:</span><br><span class="line">i -= <span class="number">1</span></span><br><span class="line">ans = ans[:i] + <span class="string">']&#125;'</span></span><br><span class="line"></span><br><span class="line">fw.write(ans.encode(<span class="string">'utf-8'</span>)) <span class="comment">#写文件</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习随录系列&lt;br&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>千鈴めい视频合集</title>
    <link href="http://yoursite.com/vtuber/chisuzumei/"/>
    <id>http://yoursite.com/vtuber/chisuzumei/</id>
    <published>2019-07-01T02:56:00.000Z</published>
    <updated>2019-07-02T12:43:32.626Z</updated>
    
    <content type="html"><![CDATA[<p>千鈴めい视频合集<br>仅下载链接</p><a id="more"></a><p><a href="http://video.ringoer.com/【千铃鸣】打招呼.flv" target="_blank" rel="noopener">#00 打招呼</a><br><a href="http://video.ringoer.com/【千铃鸣】千铃要初次直播了哦-20190403 - 千鈴が初放送するってよ。.flv" target="_blank" rel="noopener">【千铃鸣】千铃要初次直播了哦</a><br><a href="http://video.ringoer.com/【千铃鸣】0416初配信节选 夜明けと蛍-夜明けと蛍 修正版[1080P].flv" target="_blank" rel="noopener">【千铃鸣】0416初配信节选 夜明けと蛍</a><br><a href="http://video.ringoer.com/【千铃鸣】【熟肉】来决定问候语吧！-_02 挨拶を考えます！_x264[高清版].flv" target="_blank" rel="noopener">【千铃鸣】【熟肉】来决定问候语吧！</a><br><a href="http://video.ringoer.com/【神回_熟肉】【千铃鸣】试着召唤古守了（事故联动回+迫害帕里妈妈-换源千铃联动_x264[高清版].flv" target="_blank" rel="noopener">【神回/熟肉】【千铃鸣】试着召唤古守了（事故联动回+迫害帕里妈妈</a><br><a href="http://video.ringoer.com/千铃鸣直播生肉合集-【？4？月？26？日】ギターと仲良くなりたい！！[高清版].flv" target="_blank" rel="noopener">千铃鸣直播生肉合集</a><br><a href="http://video.ringoer.com/【千铃鸣】休息是大事哦-mei歌_x264[高清版].flv" target="_blank" rel="noopener">【千铃鸣】休息是大事哦</a><br><a href="http://video.ringoer.com/【神回_熟肉】我家千铃是极道大小姐-极道千玲v2[高清版].flv" target="_blank" rel="noopener">【神回/熟肉】我家千铃是极道大小姐</a><br><a href="http://video.ringoer.com/【千铃鸣】音酱解剖-吉他歌回3_x264[高清版].flv" target="_blank" rel="noopener">【千铃鸣】音酱解剖</a><br><a href="http://video.ringoer.com/【千铃鸣】【新OP ED注意】イェイ！イェイ！イェイ！-yeah!yeah！yeah![高清版].flv" target="_blank" rel="noopener">【千铃鸣】【新OP ED注意】イェイ！イェイ！イェイ！</a><br><a href="http://video.ringoer.com/【手书_千铃鸣】祝·收益化—千铃鸣来了哦！-第四版[1080P].flv" target="_blank" rel="noopener">【手书/千铃鸣】祝·收益化—千铃鸣来了哦！</a><br><a href="http://video.ringoer.com/【千铃鸣】和有栖mana酱双龙联动-双龙联动[高清版].flv" target="_blank" rel="noopener">【千铃鸣】和有栖mana酱双龙联动</a><br><a href="http://video.ringoer.com/【千铃鸣】收益化庆祝回-祝！収益化記念ライブ！.flv" target="_blank" rel="noopener">【千铃鸣】收益化庆祝回</a><br><a href="http://video.ringoer.com/【千铃鸣】介绍下我家的执事-我が家の執事を紹介[高清版].flv" target="_blank" rel="noopener">【千铃鸣】介绍下我家的执事</a><br><a href="http://video.ringoer.com/【千铃鸣】猫又少女的奥数魔刃-猫又少女のASMR[高清版].flv" target="_blank" rel="noopener">【千铃鸣】猫又少女的奥数魔刃</a><br><a href="http://video.ringoer.com/【千铃鸣】在寻找古守的家时发现meruto酱-mc“在寻找古守的家时发现meruto酱“[高清版].flv" target="_blank" rel="noopener">【千铃鸣】在寻找古守的家时发现meruto酱</a><br><a href="http://video.ringoer.com/【千铃鸣】和吉他打好关系吧！-ギターと仲良くなりたい！！_x264[高清版].flv" target="_blank" rel="noopener">【千铃鸣】和吉他打好关系吧！</a><br><a href="http://video.ringoer.com/【千铃鸣】QWOP  Part 1-qwop游戏回剪辑_x264[高清版].flv" target="_blank" rel="noopener">【千铃鸣】QWOP Part 1</a><br><a href="http://video.ringoer.com/【CCさくら】CLEAR _ 千鈴めい【歌ってみた】-sm35329808_x264[高清版].flv" target="_blank" rel="noopener">【CCさくら】CLEAR_千鈴めい【歌ってみた】</a><br><a href="http://video.ringoer.com/【千铃鸣】最终配信-最後になってしまいましたが-a143RDtjuvc_x264[高清版].mp4" target="_blank" rel="noopener">【千铃鸣】最终配信</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;千鈴めい视频合集&lt;br&gt;仅下载链接&lt;/p&gt;
    
    </summary>
    
    
      <category term="vtuber" scheme="http://yoursite.com/categories/vtuber/"/>
    
    
      <category term="vtuber" scheme="http://yoursite.com/tags/vtuber/"/>
    
      <category term="chisuzumei" scheme="http://yoursite.com/tags/chisuzumei/"/>
    
  </entry>
  
  <entry>
    <title>用 WinPCAP 监听并解析 FTP 口令</title>
    <link href="http://yoursite.com/network-experiment/WinPCAP-FTP/"/>
    <id>http://yoursite.com/network-experiment/WinPCAP-FTP/</id>
    <published>2019-04-23T14:42:31.000Z</published>
    <updated>2019-04-23T15:14:29.017Z</updated>
    
    <content type="html"><![CDATA[<p>计算机网络实验4<br><a id="more"></a></p><h1 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h1><p>用 WinPCAP 监听并分析 FTP 协议并记录 IP、用户名、密码和登陆是否<br>成功。</p><h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h1><p>Windows10<br>C#</p><h1 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h1><ol><li>wireshark部分<ul><li>连接<ol><li>本机向ftp服务器申请连接，flag=SYN<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-connect-1.png" alt="connect-1"></li><li>ftp服务器回复本机，flag=SYN，ACK<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-connect-2.png" alt="connect-2"></li><li>本机收到，向ftp服务器答复，flag=ACK<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-connect-3.png" alt="connect-3"></li><li>ftp服务器收到，向本机发送数据，flag=PSH，ACK<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-connect-4.png" alt="connect-4"></li></ol></li><li>断开<ol><li>本机向ftp服务器申请断开，flag=FIN，ACK<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-disconnect-1.png" alt="disconnect-1"></li><li>ftp服务器收到申请，向本机返信，flag=ACK<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-disconnect-2.png" alt="disconnect-2"></li><li>ftp服务器已经断开与本机的连接，向本机发信，flag=FIN，ACK<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-disconnect-3.png" alt="disconnect-3"></li><li>本机收到，断开与ftp服务器连接，向ftp服务器返信，flag=ACK<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-disconnect-4.png" alt="disconnect-4"></li></ol></li></ul></li><li>监听部分<br> <img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-监听部分.png" alt="监听部分"></li></ol><h1 id="实验总结"><a href="#实验总结" class="headerlink" title="实验总结"></a>实验总结</h1><p>大部分与实验三相同。以下解释不同的部分。</p><ol><li>全局变量<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-1.png" alt="1"><br>用FTPmode来表示现在处于解析ftp口令的哪个阶段。取值范围为{“”,”NOW”,”END”}<br>用MyDiary数组来保存一整次解析中，生成日志所需的数据。<br>用MyXML来保存一整次解析中，生成XML文档所需的数据</li><li>收包动作<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-2.png" alt="2"><br>当一整次FTP口令解析完成时，生成日志和XML</li><li>在get_frame函数中<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-3.png" alt="3"><br>录入生成日志所需的信息，然后读取用户信息</li><li>按照COMMAND获取口令<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-4.png" alt="4"></li><li>保存<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-5-1.png" alt="5-1"><br>停止侦听时询问保存<br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-5-2.png" alt="5-2"><br><img src="http://pic.ringoer.com/用 WinPCAP 监听并解析 FTP 口令-5-3.png" alt="5-3"></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;计算机网络实验4&lt;br&gt;
    
    </summary>
    
    
      <category term="network-experiment" scheme="http://yoursite.com/categories/network-experiment/"/>
    
    
      <category term="计算机网络实验" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%9E%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>日本語動詞変化式</title>
    <link href="http://yoursite.com/Japanese/doushihenkashiki/"/>
    <id>http://yoursite.com/Japanese/doushihenkashiki/</id>
    <published>2019-04-10T13:28:00.000Z</published>
    <updated>2019-04-29T09:19:12.569Z</updated>
    
    <content type="html"><![CDATA[<p>本文为动词变形备查表格。<br><a id="more"></a></p><p>在本文，以及本博客的整个日语教程中，都有以下全局设定：  </p><ol><li>五段活用动词的动词原形是去掉ます的部分<br>示例：思（おも）います中，认为 思い 是动词原形</li><li>一段活用动词的动词原形是去掉ます的部分<br>示例：食（た）べます中，认为 食べ 是动词原形</li><li>サ変動詞的动词原形是去掉します的部分<br>示例：散歩（さんぽ）します中，认为 散步 是动词原形</li><li>对于カ変動詞，因为 来 这个汉字有不同发音，故另做处理</li></ol><p>注意，此处认为的动词原形，和动词连用形略有区别。</p><h1 id="五段活用动词"><a href="#五段活用动词" class="headerlink" title="五段活用动词"></a>五段活用动词</h1><p>对于あ行来说，对应あ段的变形，本来应该变为あ，但其实不是，应该变为わ。<br>以下用到的单词：</p><table><thead><tr><th style="text-align:center">单词</th><th style="text-align:center">意思</th></tr></thead><tbody><tr><td style="text-align:center">買（か）います</td><td style="text-align:center">购买  </td></tr><tr><td style="text-align:center">書（か）きます</td><td style="text-align:center">写  </td></tr><tr><td style="text-align:center">脱（ぬ）ぎます</td><td style="text-align:center">脱  </td></tr><tr><td style="text-align:center">立（た）ちます</td><td style="text-align:center">站立  </td></tr><tr><td style="text-align:center">話（はな）します</td><td style="text-align:center">说话  </td></tr><tr><td style="text-align:center">呼（よ）びます</td><td style="text-align:center">称为、呼喊  </td></tr><tr><td style="text-align:center">死（し）にます</td><td style="text-align:center">死亡  </td></tr><tr><td style="text-align:center">読（よ）みます</td><td style="text-align:center">读  </td></tr><tr><td style="text-align:center">売（う）ります</td><td style="text-align:center">卖</td></tr></tbody></table><h2 id="变形方式"><a href="#变形方式" class="headerlink" title="变形方式"></a>变形方式</h2><ol><li>敬体形<br>就是ます形。</li><li>连用形<br>与动词原形相同。</li><li>简体形<br>将动词原形结尾的假名，变更为其对应う段。<br>示例：死にます，原形部分结尾的假名是に，对应う段是ぬ，所以死にます的简体形是死ぬ。</li><li>可能形<br>将动词原形结尾的假名，变更为其对应え段，再加ます/る。<br>新词变形与一段活用动词相同。<br>示例：死にます，原形部分结尾的假名是に，对应え段是ね，所以死にます的可能形是死ねます/死ねる。</li><li>使役态<br>将动词原形结尾的假名，变更为其对应あ段，再加せ，再加ます/る。<br>新词变形与一段活用动词相同。<br>示例：死にます，原形部分结尾的假名是に，对应あ段是な，所以死にます的使役态是死なせます/死なせる。</li><li>被动态<br>将动词原形结尾的假名，变更为其对应あ段，再加れ，再加ます/る。<br>新词变形与一段活用动词相同。<br>示例：死にます，原形部分结尾的假名是に，对应あ段是な，所以死にます的使役态是死なれます/死なれる。</li><li>使役被动态<br>将动词原形结尾的假名，变更为其对应あ段，再加され，再加ます/る。<br>新词变形与一段活用动词相同。<br>示例：死にます，原形部分结尾的假名是に，对应あ段是な，所以死にます的使役态是死なされます/死なされる。</li><li>假定形<br>将动词原形结尾的假名，变更为其对应え段，再加ば。<br>示例：死にます，原形部分结尾的假名是に，对应え段是ね，所以死にます的假定形是死ねば。</li><li>命令形<br>将动词原形结尾的假名，变更为其对应え段。<br>示例：死にます，原形部分结尾的假名是に，对应え段是ね，所以死にます的假定形是死ね。</li><li>意志形<br>将动词原形结尾的假名，变更为其对应お段，再加う。<br>示例：死にます，原形部分结尾的假名是に，对应お段是の，所以死にます的假定形是死のう。</li><li>ない形<br>将动词原形结尾的假名，变更为其对应あ段，再加ない。<br>新词变形与イ形容词相同。<br>示例：死にます，原形部分结尾的假名是に，对应あ段是な，所以死にます的ない形是死なない。</li><li>动词て形<br>根据动词原形结尾假名不同，分为以下5种情况：  <ol><li>き结尾，将き变为いて</li><li>ぎ结尾，将ぎ变为いで</li><li>ち、り、い结尾，结尾假名变为って</li><li>び、み、に结尾，结尾假名变为んで</li><li>し结尾，结尾假名变为して<br>*特别的，行く的て形是行って</li></ol></li><li>动词た形<br>将て形中的て变为た、で变为だ即可</li></ol><h2 id="变形表格"><a href="#变形表格" class="headerlink" title="变形表格"></a>变形表格</h2><p>除第一列为敬体形参照，假定形、命令形、意志形、ない形、て形、た形均采用其原样，其它列均采用简体形表示。<br>*五段活用动词在变为可能形、使役态、被动态、使役被动态时，可适用一段活用动词的敬体形、简体形变形方式。</p><table><thead><tr><th style="text-align:center">敬体形</th><th style="text-align:center">書きます</th><th style="text-align:center">脱ぎます</th><th style="text-align:center">立ちます</th><th style="text-align:center">売ります</th><th style="text-align:center">買います</th><th style="text-align:center">呼びます</th><th style="text-align:center">読みます</th><th style="text-align:center">死にます</th><th style="text-align:center">話します</th></tr></thead><tbody><tr><td style="text-align:center">连用形</td><td style="text-align:center">書き</td><td style="text-align:center">脱ぎ</td><td style="text-align:center">立ち</td><td style="text-align:center">売り</td><td style="text-align:center">買い</td><td style="text-align:center">呼び</td><td style="text-align:center">読み</td><td style="text-align:center">死に</td><td style="text-align:center">話し</td></tr><tr><td style="text-align:center">简体形</td><td style="text-align:center">書く</td><td style="text-align:center">脱ぐ</td><td style="text-align:center">立つ</td><td style="text-align:center">売る</td><td style="text-align:center">買う</td><td style="text-align:center">呼ぶ</td><td style="text-align:center">読む</td><td style="text-align:center">死ぬ</td><td style="text-align:center">話す</td></tr><tr><td style="text-align:center">可能形</td><td style="text-align:center">書ける</td><td style="text-align:center">脱げる</td><td style="text-align:center">立てる</td><td style="text-align:center">売れる</td><td style="text-align:center">買える</td><td style="text-align:center">呼べる</td><td style="text-align:center">読める</td><td style="text-align:center">死ねる</td><td style="text-align:center">話せる</td></tr><tr><td style="text-align:center">使役态</td><td style="text-align:center">書かせる</td><td style="text-align:center">脱がせる</td><td style="text-align:center">立たせる</td><td style="text-align:center">売らせる</td><td style="text-align:center">買わせる</td><td style="text-align:center">呼ばせる</td><td style="text-align:center">読ませる</td><td style="text-align:center">死なせる</td><td style="text-align:center">話させる</td></tr><tr><td style="text-align:center">被动态</td><td style="text-align:center">書かれる</td><td style="text-align:center">脱がれる</td><td style="text-align:center">立たれる</td><td style="text-align:center">売られる</td><td style="text-align:center">買われる</td><td style="text-align:center">呼ばれる</td><td style="text-align:center">読まれる</td><td style="text-align:center">死なれる</td><td style="text-align:center">話される</td></tr><tr><td style="text-align:center">使役被动态</td><td style="text-align:center">書かされる</td><td style="text-align:center">脱がされる</td><td style="text-align:center">立たされる</td><td style="text-align:center">売らされる</td><td style="text-align:center">買わされる</td><td style="text-align:center">呼ばされる</td><td style="text-align:center">読まされる</td><td style="text-align:center">死なされる</td><td style="text-align:center">話さされる</td></tr><tr><td style="text-align:center">假定形</td><td style="text-align:center">書けば</td><td style="text-align:center">脱げば</td><td style="text-align:center">立てば</td><td style="text-align:center">売れば</td><td style="text-align:center">買えば</td><td style="text-align:center">呼べば</td><td style="text-align:center">読めば</td><td style="text-align:center">死ねば</td><td style="text-align:center">話せば</td></tr><tr><td style="text-align:center">命令形</td><td style="text-align:center">書け</td><td style="text-align:center">脱げ</td><td style="text-align:center">立て</td><td style="text-align:center">売れ</td><td style="text-align:center">買え</td><td style="text-align:center">呼べ</td><td style="text-align:center">読め</td><td style="text-align:center">死ね</td><td style="text-align:center">話せ</td></tr><tr><td style="text-align:center">意志形</td><td style="text-align:center">書こう</td><td style="text-align:center">脱ごう</td><td style="text-align:center">立とう</td><td style="text-align:center">売ろう</td><td style="text-align:center">買おう</td><td style="text-align:center">呼ぼう</td><td style="text-align:center">読もう</td><td style="text-align:center">死のう</td><td style="text-align:center">話そう</td></tr><tr><td style="text-align:center">ない形</td><td style="text-align:center">書かない</td><td style="text-align:center">脱がない</td><td style="text-align:center">立たない</td><td style="text-align:center">売らない</td><td style="text-align:center">買わない</td><td style="text-align:center">呼ばない</td><td style="text-align:center">読まない</td><td style="text-align:center">死なない</td><td style="text-align:center">話さない</td></tr><tr><td style="text-align:center">て形</td><td style="text-align:center">書いて</td><td style="text-align:center">脱いで</td><td style="text-align:center">立って</td><td style="text-align:center">売って</td><td style="text-align:center">買って</td><td style="text-align:center">呼んで</td><td style="text-align:center">読んで</td><td style="text-align:center">死んで</td><td style="text-align:center">話して</td></tr><tr><td style="text-align:center">た形</td><td style="text-align:center">書いた</td><td style="text-align:center">脱いだ</td><td style="text-align:center">立った</td><td style="text-align:center">売った</td><td style="text-align:center">買った</td><td style="text-align:center">呼んだ</td><td style="text-align:center">読んだ</td><td style="text-align:center">死んだ</td><td style="text-align:center">話した</td></tr></tbody></table><h2 id="时态、语气表格"><a href="#时态、语气表格" class="headerlink" title="时态、语气表格"></a>时态、语气表格</h2><p>此处只给出简体形部分，敬体形<a href="http://ringoer.com/Japanese/kihonbunpou" target="_blank" rel="noopener">参看本链接</a></p><p>以「死にます」为例</p><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">死ぬ</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">死なない（ない形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">死んだ（た形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">死ななかった（ない形，按イ形容词变化而成的过去式）</td></tr></tbody></table><h1 id="一段活用动词"><a href="#一段活用动词" class="headerlink" title="一段活用动词"></a>一段活用动词</h1><p>以下用到的单词：<br>食（た）べます，吃</p><h2 id="变形方式-1"><a href="#变形方式-1" class="headerlink" title="变形方式"></a>变形方式</h2><ol><li>敬体形<br>就是ます形。</li><li>连用形<br>与动词原形相同。</li><li>简体形<br>动词原形+る。</li><li>可能形<br>动词原形+られ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>使役态<br>动词原形+させ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>被动态<br>动词原形+られ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>使役被动态<br>动词原形+させられ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>假定形<br>动词原形+れば。</li><li>命令形<br>动词原形+ろ。</li><li>意志形<br>动词原形+よう。</li><li>ない形<br>动词原形+ない。</li><li>动词て形<br>动词原形+て。</li><li>动词た形<br>动词原形+た。</li></ol><h2 id="变形表格-1"><a href="#变形表格-1" class="headerlink" title="变形表格"></a>变形表格</h2><table><thead><tr><th style="text-align:center">敬体形</th><th style="text-align:center">食べます</th></tr></thead><tbody><tr><td style="text-align:center">连用形</td><td style="text-align:center">食べ</td></tr><tr><td style="text-align:center">简体形</td><td style="text-align:center">食べる</td></tr><tr><td style="text-align:center">可能形</td><td style="text-align:center">食べられる</td></tr><tr><td style="text-align:center">使役态</td><td style="text-align:center">食べさせる</td></tr><tr><td style="text-align:center">被动态</td><td style="text-align:center">食べられる</td></tr><tr><td style="text-align:center">使役被动态</td><td style="text-align:center">食べさせられる</td></tr><tr><td style="text-align:center">假定形</td><td style="text-align:center">食べれば</td></tr><tr><td style="text-align:center">命令形</td><td style="text-align:center">食べろ</td></tr><tr><td style="text-align:center">意志形</td><td style="text-align:center">食べよう</td></tr><tr><td style="text-align:center">ない形</td><td style="text-align:center">食べない</td></tr><tr><td style="text-align:center">て形</td><td style="text-align:center">食べて</td></tr><tr><td style="text-align:center">た形</td><td style="text-align:center">食べた</td></tr></tbody></table><h2 id="时态、语气表格-1"><a href="#时态、语气表格-1" class="headerlink" title="时态、语气表格"></a>时态、语气表格</h2><p>此处只给出简体形部分，敬体形<a href="http://ringoer.com/Japanese/kihonbunpou" target="_blank" rel="noopener">参看本链接</a></p><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">食べる</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">食べない（ない形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">食べた（た形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">食べなかった（ない形，按イ形容词变化而成的过去式）</td></tr></tbody></table><h1 id="サ変動詞"><a href="#サ変動詞" class="headerlink" title="サ変動詞"></a>サ変動詞</h1><p>以下用到的单词：<br>散歩（さんぽ）します，散步</p><h2 id="变形方式-2"><a href="#变形方式-2" class="headerlink" title="变形方式"></a>变形方式</h2><ol><li>敬体形<br>就是ます形。</li><li>连用形<br>动词原形+し。</li><li>简体形<br>动词原形+する。</li><li>可能形<br>动词原形+でき，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>使役态<br>动词原形+させ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>被动态<br>动词原形+され，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>使役被动态<br>动词原形+させられ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>假定形<br>动词原形+すれば。</li><li>命令形<br>动词原形+しろ。</li><li>意志形<br>动词原形+しよう。</li><li>ない形<br>动词原形+しない。</li><li>动词て形<br>动词原形+して。</li><li>动词た形<br>动词原形+した。</li></ol><h2 id="变形表格-2"><a href="#变形表格-2" class="headerlink" title="变形表格"></a>变形表格</h2><table><thead><tr><th style="text-align:center">敬体形</th><th style="text-align:center">散歩します</th></tr></thead><tbody><tr><td style="text-align:center">连用形</td><td style="text-align:center">散歩し</td></tr><tr><td style="text-align:center">简体形</td><td style="text-align:center">散歩する</td></tr><tr><td style="text-align:center">可能形</td><td style="text-align:center">散歩できる</td></tr><tr><td style="text-align:center">使役态</td><td style="text-align:center">散歩させる</td></tr><tr><td style="text-align:center">被动态</td><td style="text-align:center">散歩される</td></tr><tr><td style="text-align:center">使役被动态</td><td style="text-align:center">散歩させられる</td></tr><tr><td style="text-align:center">假定形</td><td style="text-align:center">散歩すれば</td></tr><tr><td style="text-align:center">命令形</td><td style="text-align:center">散歩しろ</td></tr><tr><td style="text-align:center">意志形</td><td style="text-align:center">散歩しよう</td></tr><tr><td style="text-align:center">ない形</td><td style="text-align:center">散歩しない</td></tr><tr><td style="text-align:center">て形</td><td style="text-align:center">散歩して</td></tr><tr><td style="text-align:center">た形</td><td style="text-align:center">散歩した</td></tr></tbody></table><h2 id="时态、语气表格-2"><a href="#时态、语气表格-2" class="headerlink" title="时态、语气表格"></a>时态、语气表格</h2><p>此处只给出简体形部分，敬体形<a href="http://ringoer.com/Japanese/kihonbunpou" target="_blank" rel="noopener">参看本链接</a></p><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">散歩する</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">散歩しない（ない形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">散歩した（た形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">散歩しなかった（ない形，按イ形容词变化而成的过去式）</td></tr></tbody></table><h1 id="カ変動詞"><a href="#カ変動詞" class="headerlink" title="カ変動詞"></a>カ変動詞</h1><p>カ変動詞只有一个，就是：<br>来（き）ます，来<br>且几乎每种变形都有一个读音，需要牢记。</p><h2 id="变形方式-3"><a href="#变形方式-3" class="headerlink" title="变形方式"></a>变形方式</h2><ol><li>敬体形<br>来（き）ます</li><li>连用形<br>来（き）</li><li>简体形<br>来（く）る</li><li>可能形<br>来（こ）られ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>使役态<br>来（こ）させ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>被动态<br>来（こ）られ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>使役被动态<br>来（こ）させられ，再加ます/る。<br>新词变形与一段活用动词相同。</li><li>假定形<br>来（く）れば</li><li>命令形<br>来（こ）い</li><li>意志形<br>来（こ）よう</li><li>ない形<br>来（こ）ない</li><li>动词て形<br>来（き）て</li><li>动词た形<br>来（き）た</li></ol><h2 id="变形表格-3"><a href="#变形表格-3" class="headerlink" title="变形表格"></a>变形表格</h2><table><thead><tr><th style="text-align:center">敬体形</th><th style="text-align:center">きます</th></tr></thead><tbody><tr><td style="text-align:center">连用形</td><td style="text-align:center">き</td></tr><tr><td style="text-align:center">简体形</td><td style="text-align:center">くる</td></tr><tr><td style="text-align:center">可能形</td><td style="text-align:center">こられる</td></tr><tr><td style="text-align:center">使役态</td><td style="text-align:center">こさせる</td></tr><tr><td style="text-align:center">被动态</td><td style="text-align:center">こられる</td></tr><tr><td style="text-align:center">使役被动态</td><td style="text-align:center">こさせられる</td></tr><tr><td style="text-align:center">假定形</td><td style="text-align:center">くれば</td></tr><tr><td style="text-align:center">命令形</td><td style="text-align:center">こい</td></tr><tr><td style="text-align:center">意志形</td><td style="text-align:center">こよう</td></tr><tr><td style="text-align:center">ない形</td><td style="text-align:center">こない</td></tr><tr><td style="text-align:center">て形</td><td style="text-align:center">きて</td></tr><tr><td style="text-align:center">た形</td><td style="text-align:center">きた</td></tr></tbody></table><h2 id="时态、语气表格-3"><a href="#时态、语气表格-3" class="headerlink" title="时态、语气表格"></a>时态、语气表格</h2><p>此处只给出简体形部分，敬体形<a href="http://ringoer.com/Japanese/kihonbunpou" target="_blank" rel="noopener">参看本链接</a></p><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">くる</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">こない（ない形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">きた（た形）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">こなかった（ない形，按イ形容词变化而成的过去式）</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文为动词变形备查表格。&lt;br&gt;
    
    </summary>
    
    
      <category term="Japanese" scheme="http://yoursite.com/categories/Japanese/"/>
    
    
      <category term="日语教程" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AF%AD%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>日语入门向基本文法</title>
    <link href="http://yoursite.com/Japanese/kihonbunpou/"/>
    <id>http://yoursite.com/Japanese/kihonbunpou/</id>
    <published>2019-04-10T02:43:00.000Z</published>
    <updated>2019-04-29T09:15:26.647Z</updated>
    
    <content type="html"><![CDATA[<p>日语入门向基本文法<br><a id="more"></a></p><h1 id="词性"><a href="#词性" class="headerlink" title="词性"></a>词性</h1><h2 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h2><p>太简单，此处只说明疑问词。</p><ol><li>何<br>翻译为：什么<br>单字读作なに。<br>在句子中时，根据以下规则有变：  <ol><li>“何”后面的助词是が、ま、か行的助词时，读なに</li><li>“何”后面的助词是な、だ、た行的助词时，读なん</li><li>不符合1、2时，读なに</li></ol></li><li>誰（だれ）　　<br>翻译为：谁</li><li>何時（なんじ）<br>翻译为：什么时候<br>一般指精确到时分秒程度的时间</li><li>何処（どこ）<br>翻译为：哪里</li><li>いつ<br>翻译为：什么时候<br>一般指精确到年月日程度的时间</li></ol><h2 id="助词"><a href="#助词" class="headerlink" title="助词"></a>助词</h2><ol><li>は<br>常用于提示主语<br>复合句中主句主语用は<br>做助词时读wa</li><li>が<br>常用于提示主语<br>复合句中从句主语用が</li><li>を<br>常用于有动词的句子中，形式为<br>【宾语（名词）】を【动词】<br>表示对【宾语】进行【动词】所表示的动作<br>做助词时读o</li><li>へ<br>常用于有移动目标的句子中，形式为<br>【目的地】へ【（表示移动的）动词】<br>表示向着【目的地】进行【动词】所表示的动作<br>此处【（表示移动的）动词】一般需要是能表示”从A到B”这样的感觉的动词<br>做助词时读e</li><li>の<br>常用于表示从属关系，形式为<br>【名词1】の【名词2】<br>表示【名词2】是属于【名词1】的类别的<br>一般有两种用法：<ol><li>生徒会長（せいとかいちょう）の彼（かれ）<br>译作”身为学生会长的他”<br>此时，表示”他”属于”学生会长”这个类别，具有”学生会长”这个属性</li><li>彼のもの<br>译作”他的东西”<br>此时，表示”东西”属于”他”这个类别，即为”属于他的东西”<br>此时，の译作”的”</li></ol></li><li>と<br>常用于：<ol><li>连接两个名词，形式为<br>【名词1】や【名词2】<br>此时连接而成的这个短语可以作为某个句子中的主语组分或宾语组分等<br>翻译为：和</li><li>在特定语法中充当连接成分，如：<br>小句 + と思（おも）います<br>此时不译</li></ol></li><li>や<br>常用于连接两个名词，形式为<br>【名词1】や【名词2】<br>连接而成的这个短语可以作为某个句子中的主语组分或宾语组分等<br>此时翻译为：或</li><li>も<br>常用于替代は或が<br>前接名词<br>此时翻译为：也</li><li>に<br>并不基本，以后提到再学习</li><li>で<br>并不基本，以后提到再学习</li></ol><h2 id="语气词"><a href="#语气词" class="headerlink" title="语气词"></a>语气词</h2><p>语气词一般放在句尾。<br>常见语气词如下：</p><ol><li>よ<br>～哟<br>有以下作用：<ol><li>表示主张、叮嘱、或引起对方注意。<br>例：あなたが行かなくても、私は行くよ。</li><li>表示怀疑，责难的语气。<br>例：なぜ、ぼくに教えてくれなかったんだよ。</li><li>表示命令，请求，接在动词和动词活用形助动词的命令形后面，或接在表示禁止和命令的な后面，一般是男性用语。<br>例：遅くなるから、早く行けよ。</li><li>表示劝诱，恳求，接在助动词“う，よう”后面。<br>例：さあ、遅れないように早く行こうよ。</li></ol></li><li>ね<br>～呢<br>有以下作用：<ol><li>表示轻微的感叹。<br>例：やあ、ずいぶんきれいな部屋だね。<br>　　いいお天気だね。</li><li>表示轻微的主张或叮嘱的心情。<br>例：あの人はきっと成功すると思いますね。</li><li>征求同意，或希望对方确认，促使对方回答。<br>例：もう一度行きましょうね。</li><li>表示疑问，责问。男性用语。<br>例：私にはよく読めないが、ここになんと書いてあるね。</li></ol></li><li>よね<br>是「よ」和「ね」的复合性终助词。<br>有以下作用：<ol><li>要求对方同意自己的观点</li><li>表明自己同意对方的观点</li></ol></li><li>わ<br>主要是女性使用，语调偏高，男性也有用的，但要降调。<br>有以下作用：<ol><li>表示强调，用来调整或加强语气。<br>例：私はこれが好きだわ。<br>　　あそこに田中さんがいるわ。<br>用わよ、わね的形式，前者强调自己的主张，后者希望别人赞成或证实自己的看法。<br>例：今度の旅行には、私も行くわよ。<br>　　あの花、本当にきれいだわね。</li><li>表示惊奇，感叹的语气。<br>例：まあ、きれいだわ。<br>　　雨がまた降り出しましたわ。</li></ol></li><li>の<br>主要是女性和儿童使用。<ol><li>表示断定，语气较亲密。读降调。<br>例：とてもいやなの。<br>　　今おなかがいっぱいなので、何も食べたくないの。</li><li>表示叮嘱的语气，常用のね的形式。<br>例：きっと引き受けてくれるのね。<br>　　明日は必ず来てくれるのね。待ってますよ。</li><li>表示命令，语气较强，发音要重。<br>例：ご飯は黙って食べるの。</li><li>表示质问，疑问。读升调。<br>例：きれいな着物を着て、どこへ行くの。</li></ol></li><li>ぞ<br>一般由男性使用，表示一种强调和肯定的判断，有一种大男子主义的语气。</li><li>な<br>表示说话人再次确认自己的感情等。<br>一般是男性使用。 </li><li>ぜ<br>用于说话人单方面向听话人传达语句的内容。想要改变听话人对某事情认识的意图并不强。<br>一般是男性使用。</li><li>さ<br>表示说话人并非对所作的判断负责，而是作为理所当然的事情或暂且的判断表示提示。<br>一般是男性使用。</li><li>かな<br>是「か」和「な」的复合性终助词，后面一般接「思う」之类的动词。一般是男性使用。</li><li>かしら<br>かな的女性版。</li></ol><h2 id="动词"><a href="#动词" class="headerlink" title="动词"></a>动词</h2><h3 id="五段活用动词-一类动词"><a href="#五段活用动词-一类动词" class="headerlink" title="五段活用动词/一类动词"></a>五段活用动词/一类动词</h3><p>五段活用，指因为该动词的动词原形结尾有五种情况，所以有五种变形</p><ol><li>き</li><li>ぎ</li><li>ち、り、い</li><li>び、み、に</li><li>し<br>无特殊说明的情况下，符合上述形态的动词都是五段活用动词</li></ol><h3 id="一段活用动词-二类动词"><a href="#一段活用动词-二类动词" class="headerlink" title="一段活用动词/二类动词"></a>一段活用动词/二类动词</h3><p>与五段活用相对，一段活用，指该动词不论动词原形结尾是什么形态，都只有一种变形<br>无特殊说明的情况下，不是五段活用动词或サ変动词、カ変动词的动词，就是一段活用动词</p><h3 id="サ変动词、カ変动词-三类动词"><a href="#サ変动词、カ変动词-三类动词" class="headerlink" title="サ変动词、カ変动词/三类动词"></a>サ変动词、カ変动词/三类动词</h3><ol><li>サ変动词<br>无特殊说明的情况下，符合”名词+します”的动词就是サ変动词<br>因为这类动词的变形集中在对后面的”します”进行变形，而不管怎么变，这一部分的第一个假名都是さ行的，所以称之为サ変动词</li><li>カ変动词<br>只有一个单词，就是来（き）ます<br>因为这个单词的几种变形中，汉字”来”虽然读音不尽相同，但都属于か行，所以称之为カ変动词</li></ol><h2 id="形容词"><a href="#形容词" class="headerlink" title="形容词"></a>形容词</h2><h3 id="イ形容词"><a href="#イ形容词" class="headerlink" title="イ形容词"></a>イ形容词</h3><p>无特殊说明的情况下，以い结尾的形容词就是イ形容词</p><h3 id="ナ形容词-形容动词"><a href="#ナ形容词-形容动词" class="headerlink" title="ナ形容词/形容动词"></a>ナ形容词/形容动词</h3><p>无特殊说明的情况下，不以い结尾的形容词就是ナ形容词<br>因为该类形容词在使用时通常要加上な，所以称之为ナ形容词</p><h2 id="副词"><a href="#副词" class="headerlink" title="副词"></a>副词</h2><p>一般副词主要有三种：</p><ol><li>天生就是副词，如ごろごろ：无所事事</li><li>イ形容词中，结尾的い变为く</li><li>ナ形容词+に</li></ol><h1 id="敬体形、简体形"><a href="#敬体形、简体形" class="headerlink" title="敬体形、简体形"></a>敬体形、简体形</h1><h2 id="敬体形"><a href="#敬体形" class="headerlink" title="敬体形"></a>敬体形</h2><h3 id="一般陈述句"><a href="#一般陈述句" class="headerlink" title="一般陈述句"></a>一般陈述句</h3><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">です</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">ではありません（此处は读wa）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">でした</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">ではありませんでした</td></tr></tbody></table><h3 id="一般动词句"><a href="#一般动词句" class="headerlink" title="一般动词句"></a>一般动词句</h3><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">ます</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">ません</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">ました</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">ませんでした</td></tr></tbody></table><h3 id="一般形容词句"><a href="#一般形容词句" class="headerlink" title="一般形容词句"></a>一般形容词句</h3><h4 id="イ形容词-1"><a href="#イ形容词-1" class="headerlink" title="イ形容词"></a>イ形容词</h4><p>与一般陈述句相同</p><h4 id="ナ形容词"><a href="#ナ形容词" class="headerlink" title="ナ形容词"></a>ナ形容词</h4><p>与一般陈述句相同</p><h2 id="简体形"><a href="#简体形" class="headerlink" title="简体形"></a>简体形</h2><h3 id="一般陈述句-1"><a href="#一般陈述句-1" class="headerlink" title="一般陈述句"></a>一般陈述句</h3><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">だ</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">ではない（此处は读wa）</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">じゃない（ではない的口语化）</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">だった</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">ではなかった</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">じゃなかった</td></tr></tbody></table><h3 id="一般动词句-1"><a href="#一般动词句-1" class="headerlink" title="一般动词句"></a>一般动词句</h3><p><a href="http://ringoer.com/Japanese/doushihenkashiki" target="_blank" rel="noopener">参看本链接</a></p><h3 id="一般形容词句-1"><a href="#一般形容词句-1" class="headerlink" title="一般形容词句"></a>一般形容词句</h3><h4 id="イ形容词-2"><a href="#イ形容词-2" class="headerlink" title="イ形容词"></a>イ形容词</h4><p>イ形容词的变形体现在对于单词结尾的い的变形</p><table><thead><tr><th style="text-align:center">时态</th><th style="text-align:center">语气</th><th style="text-align:center">表达</th></tr></thead><tbody><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">肯定式</td><td style="text-align:center">～い</td></tr><tr><td style="text-align:center">一般现在时</td><td style="text-align:center">否定式</td><td style="text-align:center">～くない</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">肯定式</td><td style="text-align:center">～かった</td></tr><tr><td style="text-align:center">一般过去时</td><td style="text-align:center">否定式</td><td style="text-align:center">～くなかった</td></tr></tbody></table><h4 id="ナ形容词-1"><a href="#ナ形容词-1" class="headerlink" title="ナ形容词"></a>ナ形容词</h4><p>与一般陈述句相同</p><h1 id="句型"><a href="#句型" class="headerlink" title="句型"></a>句型</h1><h2 id="一般陈述句-2"><a href="#一般陈述句-2" class="headerlink" title="一般陈述句"></a>一般陈述句</h2><ol><li>【名词1】は【名词2】です。<br>【名词1】是【名词2】<br>其中【名词1】是已知的，【名词2】是新引入的。<br>示例：<br>それはリンゴです。<br>那是苹果。（先看到那里有个物件，然后才认出是苹果）</li><li>【名词1】が【名词2】です。<br>【名词1】是【名词2】<br>其中【名词2】是已知的，【名词1】是新引入的。<br>示例：<br>それがリンゴです。<br>那是苹果。（先知道有苹果这么一个东西，然后四下张望，看到一个物件）</li><li>です的变形<br>默认的です表达一般现在时，有以下变形。对于每个变形，若无特殊说明，使用时直接替换です即可。</li></ol><h2 id="一般疑问句"><a href="#一般疑问句" class="headerlink" title="一般疑问句"></a>一般疑问句</h2><p>直接在小句后加か即可，结尾用句号。<br>也可直接问号，但此时有惊叹的效果，故而一般不用。<br>示例：<br>それはリンゴですか。<br>那是苹果吗？  </p><p>有疑问词的句子，发问时只能使用以下句式。<br>【疑问词】が【名词】ですか<br>不能用は</p><h2 id="一般存在句"><a href="#一般存在句" class="headerlink" title="一般存在句"></a>一般存在句</h2><ol><li>有主观意识的存在<br>【名词】が【地点】にいます。<br>示例：<br>猫がそこにいます<br>地点成分在句子中可以提前，如：<br>そこに猫がいます</li><li>没有主观意识的存在<br>【名词】が【地点】にあります。<br>示例：<br>花がそこにあります<br>地点成分在句子中可以提前，如：<br>そこに花があります</li><li>区别<br>有生命的存在，不一定有主观意识。<br>如动物有意识，植物没有。<br>没有生命的存在，则一定没有意识。</li><li>います和あります的变形<br>います和あります均为动词。<br>います的简体形为いる，其它变形与一段活用动词相同。<br>あります的简体形为ある，其它变形与五段活用动词相同。</li></ol><h2 id="一般动词句-2"><a href="#一般动词句-2" class="headerlink" title="一般动词句"></a>一般动词句</h2><p>【主语】は【宾语】を【动词】ます<br>表示【主语】对【宾语】做出了【动词】所表示的动作。</p><h2 id="一般形容词句-2"><a href="#一般形容词句-2" class="headerlink" title="一般形容词句"></a>一般形容词句</h2><h3 id="イ形容词-3"><a href="#イ形容词-3" class="headerlink" title="イ形容词"></a>イ形容词</h3><ol><li>【名词】は【イ形容词】です<br>表示【名词】是【イ形容词】的。<br>示例：<br>彼女は美しいです<br>她是美丽的</li><li>【名词】が【イ形容词】です<br>表示【名词】是【イ形容词】的。<br>此处的【イ形容词】是【名词】的固有属性。<br>示例：<br>太陽が丸いです<br>太阳是圆的</li></ol><h3 id="ナ形容词-2"><a href="#ナ形容词-2" class="headerlink" title="ナ形容词"></a>ナ形容词</h3><ol><li>【名词】は【ナ形容词】です<br>表示【名词】是【ナ形容词】的。<br>示例：<br>その山は有名です<br>那座山是有名的</li><li>【名词】が【ナ形容词】です<br>表示【名词】是【ナ形容词】的。<br>此处的【ナ形容词】是【名词】的固有属性。<br>示例：<br>その花がきれいです<br>那朵花是漂亮的</li></ol><h1 id="惯用句"><a href="#惯用句" class="headerlink" title="惯用句"></a>惯用句</h1><p>以下句子中，小括号表示对读音的注释。<br>若无小括号，则按一般规则处理。</p><table><thead><tr><th style="text-align:center">句子</th><th style="text-align:center">意思</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">こんにちは(wa)</td><td style="text-align:center">你好</td><td style="text-align:center">常用于白天</td></tr><tr><td style="text-align:center">こんばんは(wa)</td><td style="text-align:center">晚上好</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">おはようございます</td><td style="text-align:center">早上好</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">おはよう</td><td style="text-align:center">早上好</td><td style="text-align:center">是上一句的缩写</td></tr><tr><td style="text-align:center">ありがとうございます</td><td style="text-align:center">谢谢</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">ありがとう</td><td style="text-align:center">谢谢</td><td style="text-align:center">是上一句的缩写</td></tr><tr><td style="text-align:center">すみません</td><td style="text-align:center">对不起</td><td style="text-align:center">较正式</td></tr><tr><td style="text-align:center">すいません</td><td style="text-align:center">对不起</td><td style="text-align:center">是上一句的口语形式</td></tr><tr><td style="text-align:center">ごめんなさい</td><td style="text-align:center">对不起</td><td style="text-align:center">较随意，常用于熟人</td></tr><tr><td style="text-align:center">ごめん</td><td style="text-align:center">对不起</td><td style="text-align:center">是上一句的缩写</td></tr><tr><td style="text-align:center">申(もう)し訳(わけ)ございません</td><td style="text-align:center">对不起</td><td style="text-align:center">最为郑重的说法</td></tr><tr><td style="text-align:center">更多句子待更新…</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日语入门向基本文法&lt;br&gt;
    
    </summary>
    
    
      <category term="Japanese" scheme="http://yoursite.com/categories/Japanese/"/>
    
    
      <category term="日语教程" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AF%AD%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>汉明码</title>
    <link href="http://yoursite.com/encoding/HammingCode/"/>
    <id>http://yoursite.com/encoding/HammingCode/</id>
    <published>2019-04-09T00:18:00.000Z</published>
    <updated>2019-04-09T01:04:43.765Z</updated>
    
    <content type="html"><![CDATA[<p>汉明码编码方式详解<br><a id="more"></a></p><h1 id="确定位数"><a href="#确定位数" class="headerlink" title="确定位数"></a>确定位数</h1><p>已知有n位信息码，k位校验码，则在汉明码的构造规则中，应满足：<br>2^k&gt;=n+k+1<br>其中k位校验码应至少有n+k种状态，用来表达n+k位的错误，还有1位用来表示整个代码正确无误。<br>故通常有下表。</p><table><thead><tr><th style="text-align:center">n</th><th style="text-align:center">k（最小）</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">2~4</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">5~11</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">12~26</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">27~57</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">58~120</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td></tr></tbody></table><h1 id="构造序列"><a href="#构造序列" class="headerlink" title="构造序列"></a>构造序列</h1><p>设n+k位序列每一位编号分别为1,2,3,…,n+k，k位汉明码分别为C1、C2、C4、…、C2^(k-1)，则对于任意i(1&lt;=i&lt;=k)，C2^(i-1)应放在序列中第i号位置上。<br>示例：<br>现有n=4的信息码，由上表可得k=3，则n+k位序列编号为1~7，k位汉明码编号为C1、C2、C4。同时，设信息码的4位分别为b4、b3、b2、b1，则有下表序列。</p><table><thead><tr><th style="text-align:center">二进制序号</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th><th style="text-align:center">7</th></tr></thead><tbody><tr><td style="text-align:center">名称</td><td style="text-align:center">C1</td><td style="text-align:center">C2</td><td style="text-align:center">b4</td><td style="text-align:center">C4</td><td style="text-align:center">b3</td><td style="text-align:center">b2</td><td style="text-align:center">b1</td></tr></tbody></table><p>以此类推。<br>此时，对于任意i(1&lt;=i&lt;=k)，C2^(i-1)负责检测的范围为[i+m*i*2，i*2-1+m*i*2]，m&gt;=0且m为整数<br>以上表为例，则有：<br>C1负责检测1,3,5,7位<br>C2负责检测2,3,6,7位<br>C4负责检测4,5,6,7位</p><h1 id="奇偶校验"><a href="#奇偶校验" class="headerlink" title="奇偶校验"></a>奇偶校验</h1><p>设C2^(i-1)负责检测t位，若为偶校验，则这t位相加，所得结果应为偶数，即二进制为最后一位为0；若为奇校验，则这t位相加，所得结果应为奇数，即二进制位最后一位为1。<br>以上表为例，则有：<br>第1,3,5,7位相加为偶数，C1在第1位，所以C1=(第3位+第5位+第7位)的和取二进制最后一位，简写为C1=3位 + 5位 + 7位，即C1=b4 + b3 + b1<br>第2,3,6,7位相加为偶数，C2在第2位，所以C2=3位 + 6位 + 7位，即C2=b4 + b2 + b1<br>第4,5,6,7位相加为偶数，C4在第4位，所以C4=5位 + 6位 + 7位，即C4=b3 + b2 + b1</p><p>若设信息码为0101，采用偶校验，则<br>C1=0+1+1=0<br>C2=0+0+1=1<br>C4=1+0+1=0<br>所以信息码0101对应的汉明码为0100101</p><h1 id="纠错过程"><a href="#纠错过程" class="headerlink" title="纠错过程"></a>纠错过程</h1><p>前面说到，对于任意i(1&lt;=i&lt;=k)，C2^(i-1)负责检测的范围为[i+m*i*2，i*2-1+m*i*2]，m&gt;=0且m为整数。则收信一方只需要按该规则重新计算即可。<br>于是，设对于任意i(1&lt;=i&lt;=k)，已知C2^(i-1)负责检测t位，则有P2^(i-1)=∑这t位（包括C2^(i-1)所在位）。<br>接上例，则有：<br>P4=4位 + 5位 + 6位 + 7位<br>P2=2位 + 3位 + 6位 + 7位<br>P1=1位 + 3位 + 5位 + 7位<br>若全0，则表示信息完全正确</p><p>若此时设收到的码字为0100111，则通过计算，得：<br>P4=0+1+1+1=1<br>P2=1+0+1+1=1<br>P1=0+0+1+1=0<br>说明C1负责的分组没错，C2和C4负责的分组有错。<br>经检查发现，只有计算结果110对应第110位（也就是第6位）有错。此时计算机会直接修改第110位，于是完成纠错。</p><p>又若正确码字为0100101，收到码字为1100101，则通过计算，得：<br>P4=0+1+0+1=0<br>P2=1+0+0+1=0<br>P1=1+0+1+1=1<br>此时P4P2P1=001，所以第1位出错，应该修改第1位。但因为第1位是C1所在地，是校验位，对信息码没有影响，故一般不纠正此处错误。</p><p>以上，就是汉明码的工作过程。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;汉明码编码方式详解&lt;br&gt;
    
    </summary>
    
    
      <category term="encoding" scheme="http://yoursite.com/categories/encoding/"/>
    
    
      <category term="汉明码" scheme="http://yoursite.com/tags/%E6%B1%89%E6%98%8E%E7%A0%81/"/>
    
  </entry>
  
</feed>
